[[],["<-","envRefInferField",["function",[{"self":"","field":"","thisClass":"","selfEnv":["as.environment","self"]}],["{","'Install a field method into the environment of object\nself from reference class thisClass.'",["<-","fields",["@","thisClass","fieldPrototypes"]],["if",["exists","field",{"envir":"fields"},{"inherits":"FALSE"}],["{",["<-","value",["get","field",{"envir":"fields"}]]],["{",["<-","methods",["@","thisClass","refMethods"]],["if",["exists","field",{"envir":"methods"},{"inherits":"FALSE"}],["{",["<-","value",["get","field",{"envir":"methods"}]],["<-","value",["installClassMethod","value","self","field","selfEnv","thisClass"]]],["stop",["gettextf","\"%s is not a valid field or method name for reference class %s\"",["sQuote","field"],["dQuote",["@","thisClass","className"]]],{"domain":"NA"}]]]],"value"]]],["<-","installClassMethod",["function",[{"def":"","self":"","me":"","selfEnv":"","thisClass":""}],["{",["if",["||",["is","def","\"externalMethodDef\""],["!",["is","def","\"refMethodDef\""]]],["{",["assign","me","def",{"envir":["@","thisClass","refMethods"]}],["return","def"]]],["<-","depends",["@","def","mayCall"]],["<-",["environment","def"],"selfEnv"],["assign","me","def",{"envir":"selfEnv"}],["<-","done",["names","selfEnv"]],["<-","notDone",["setdiff","depends","done"]],["<-","superCase",["match","\"callSuper\"","notDone","0"]],["if",[">","superCase","0"],["{",["if",["nzchar",["@","def","superClassMethod"]],["<-",["[[","notDone","superCase"],["@","def","superClassMethod"]],["stop",["gettextf","\"a call to superClass() is in the method %s but there is no superclass definition of this method for class %s\"",["sQuote","me"],["dQuote",["@","thisClass","className"]]],{"domain":"NA"}]]]],["for","what","notDone",["installClassMethod",["get","what",{"envir":["@","thisClass","refMethods"]}],"self","what","selfEnv","thisClass"]],["if",[">","superCase","0"],["{",["<-","newEnv",["new.env","FALSE",{"parent":"selfEnv"}]],["assign","\"callSuper\"",["get",["@","def","superClassMethod"],{"envir":"selfEnv"}],{"envir":"newEnv"}],["<-",["environment","def"],"newEnv"],["assign","me","def",{"envir":"selfEnv"}]]],"def"]]],["<-","..hasCodeTools","FALSE"],["<-",".hasCodeTools",["function",[],["{",["if",["!",["isTRUE","..hasCodeTools"]],[".assignOverBinding","\"..hasCodeTools\"",[">",["length",["list.files",["system.file",{"package":"\"codetools\""}]]],"0"],".methodsNamespace","FALSE"]],"..hasCodeTools"]]],["<-",".getGlobalFuns",["function",[{"def":""}],["{",["if",[".hasCodeTools",{}],["$",[["::","codetools","findGlobals"],"def",{"merge":"FALSE"}],"functions"],["unique",["unlist",["lapply","def","all.names"]]]]]]],["<-","makeClassMethod",["function",[{"def":"","name":"","Class":"","superClassMethod":"\"\"","allMethods":""}],["{",["if",["identical",["[[",["formalArgs","def"],"1"],"\".self\""],["<-","def",["externalRefMethod","def"]]],["if",["is","def","\"externalRefMethod\""],["{",["<-",["@","def","name"],"name"],["<-",["@","def","refClassName"],"Class"],["<-",["@","def","superClassMethod"],"superClassMethod"],["return","def"]]],["<-","depends",[".getGlobalFuns","def"]],["if",["%in%","\"usingMethods\"","depends"],["{",["<-","declared",[".declaredMethods","def"]],["if",["&&",["length","declared"],["any",["!",["%in%","declared","allMethods"]]]],["warning",["gettextf","\"methods declared in usingMethods() but not found: %s\"",["paste0",["[","declared",["!",["%in%","declared","allMethods"]]],{"collapse":"\", \""}]]]],["<-","depends",["c","declared","depends"]]]],["<-","depends",["[","depends",[">",["match","depends","allMethods","0"],"0"]]],["new","\"refMethodDef\"","def",{"mayCall":"depends"},{"name":"name"},{"refClassName":"Class"},{"superClassMethod":"superClassMethod"}]]]],["<-","refObjectClass",["function",[{"object":""}],["{",["<-","Class",["class","object"]],["<-","classDef",["getClassDef","Class"]],["if",["is","classDef","\"refClassRepresentation\""],"classDef",["stop",["gettextf","\"%s is not a reference class\"",["dQuote","Class"]],{"domain":"NA"}]]]]],["<-","envRefSetField",["function",[{"object":"","field":"","thisClass":["refObjectClass","object"],"env":["as.environment","object"],"value":""}],["{",["<-","fieldClass",["[[",["@","thisClass","fieldClasses"],"field"]],["if",["is.null","fieldClass"],["stop",["gettextf","\"%s is not a field in class %s\"",["sQuote","field"],["dQuote",["@","thisClass","className"]]],{"domain":"NA"}],["assign","field","value",{"envir":"env"}]],"object"]]],["<-",".initForEnvRefClass",["function",[{".Object":"","...":""}],["{",["<-","Class",["class",".Object"]],["<-","classDef",["getClass","Class"]],["<-","objectParent",["$",["@","classDef","refMethods"],".objectParent"]],["if",["is.null","objectParent"],["{",["<-","objectParent",[".NamespaceOrPackage",["@","classDef","package"]]]]],["<-","selfEnv",["new.env","TRUE","objectParent"]],["<-",["@",".Object",".xData"],"selfEnv"],["<-","prototypes",["@","classDef","fieldPrototypes"]],["<-","fieldClasses",["@","classDef","fieldClasses"]],["<-","fields",["names","fieldClasses"]],["for","field","fields",["{",["<-","fp",["[[","prototypes","field"]],["if",["is","fp","\"activeBindingFunction\""],["{",["<-",["environment","fp"],"selfEnv"],["makeActiveBinding","field","fp","selfEnv"],["if",["is","fp","\"defaultBindingFunction\""],["{",["<-","class",["[[","fieldClasses","field"]],["<-","value",["if",["!",["isVirtualClass","class"]],["new","class"]]],["assign",[".bindingMetaName","field"],"value",{"envir":"selfEnv"}]]]],["assign","field","fp",{"envir":"selfEnv"}]]]],["<-",["$","selfEnv",".self"],".Object"],["<-",["$","selfEnv",".refClassDef"],"classDef"],["if",["is.function",["$",["@","classDef","refMethods"],"initialize"]],["{",[["$",".Object","initialize"],"..."],["<-",".Object",["$","selfEnv",".self"]]],["{",["if",[">",["nargs",{}],"1"],["{",["<-",".Object",[["::","methods","initRefFields"],".Object","classDef","selfEnv",["list","..."]]]]]]],["if",["is.function",["$",["@","classDef","refMethods"],"finalize"]],["reg.finalizer","selfEnv",["function",[{"x":""}],[["$",["$","x",".self"],"finalize"],{}]],"TRUE"]],["lockBinding","\".self\"","selfEnv"],["lockBinding","\".refClassDef\"","selfEnv"],["if",["is",["@","classDef","validity"],"\"function\""],["validObject",".Object"]],".Object"]]],["<-","initFieldArgs",["function",[{".Object":"","classDef":"","selfEnv":"","...":""}],["initRefFields",".Object","classDef","selfEnv",["list","..."]]]],["<-","initRefFields",["function",[{".Object":"","classDef":"","selfEnv":"","args":""}],["{",["if",["length","args"],["{",["<-","snames",["allNames","args"]],["<-","which",["nzchar","snames"]],["<-","elements",["[","args","which"]],["<-","supers",["[","args",["!","which"]]],["<-","elNames",["names","elements"]],["for","super","supers",["{",["if",["!",["is","super","\"refClass\""]],["{",["warning",["gettextf","\"unnamed arguments to $new() must be objects from a reference class; got an object of class %s\"",["dQuote",["class","super"]]],{"domain":"NA"}],["next"]]],["<-","fields",["names",["@",["$","super",".refClassDef"],"fieldClasses"]]],["<-","fields",["[","fields",["is.na",["match","fields","elNames"]]]],["for","field","fields",["<-",["[[","elements","field"],[["$","super","field"],"field"]]],["<-","elNames",["names","elements"]]]],["for","field","elNames",["envRefSetField",".Object","field","classDef","selfEnv",["[[","elements","field"]]]]],".Object"]]],["<-",".dollarForEnvRefClass",["function",[{"x":"","name":""}],["{",["<-","what",["substitute","name"]],["if",["is.symbol","what"],["<-","what",["as.character","what"]],["<-","what","name"]],["<-","selfEnv",["as.environment","x"]],["if",["exists","what",{"envir":"selfEnv"},{"inherits":"FALSE"}],["get","what",{"envir":"selfEnv"}],["if",["is","x","\"envRefClass\""],["envRefInferField","x","what",["getClass",["class","x"]],"selfEnv"],["stop",["gettextf","\"%s is not a valid field or method name for this class\"",["sQuote","what"]],{"domain":"NA"}]]]]]],["<-",".dollarGetsForEnvRefClass",["function",[{"x":"","name":"","value":""}],["{",["<-","what",["substitute","name"]],["if",["is.symbol","what"],["<-","what",["as.character","what"]],["<-","what","name"]],["<-","selfEnv",["as.environment","x"]],["envRefSetField","x","what",["refObjectClass","x"],"selfEnv","value"],["invisible","x"]]]],[["::","utils","globalVariables"],"\".envRefMethods\""],["<-",".envRefMethods",["list",{"export":["function",[{"Class":""}],["{","'\nReturns the result of coercing the object to\nClass.  No effect on the object itself.\n'",["if",[">",["match",["@",".refClassDef","className"],"Class","0"],"0"],["return",".self"]],["<-","classDef",["getClass","Class"]],["if",["&&",["is","classDef","\"refClassRepresentation\""],["!",["is.na",["match","Class",["@",".refClassDef","refSuperClasses"]]]]],["{",["<-","value",["new","classDef"]],["<-","env",["as.environment","value"]],["<-","selfEnv",["as.environment",".self"]],["<-","fieldClasses",["@","classDef","fieldClasses"]],["for","field",["names","fieldClasses"],["{",["<-","current",["get","field",{"envir":"selfEnv"}]],["if",["!",["is","current",["[[","fieldClasses","field"]]],["stop",["gettextf","\"the class of field %s in the object is not compatible with the desired class %s in the target\"",["sQuote","field"],["dQuote",["[[","fieldClasses","field"]]],{"domain":"NA"}]],["assign","field",{"envir":"env"},"current"]]],"value"],["if",["is","classDef","\"classRepresentation\""],[["::","methods","as"],".self","Class"],["if",["&&",["is.character","Class"],["==",["length","Class"],"1"]],["stop",["gettextf","\"%s is not a defined class in this environment\"",["dQuote","Class"]],{"domain":"NA"}],["stop","\"invalid 'Class' argument:  should be a single string\""]]]]]]},{"import":["function",[{"value":"","Class":["class","value"]}],["{","'\nImports value, replacing the part of the current object\ncorresponding to Class (if argument Class is missing\nit is taken to be class(value)).  The Class must be one\nof the reference superclasses of the current class (or\nthat class itself, but then you could just overrwite the object).\n'",["if",["!",["missing","Class"]],["<-","value",[["$","value","export"],"Class"]]],["<-","classDef",["getClass","Class"]],["if",["&&",["is","classDef","\"refClassRepresentation\""],["(",["||",["!",["is.na",["match","Class",["@",".refClassDef","refSuperClasses"]]]],["identical",["@","classDef","className"],["@",".refClassDef","className"]]]]],["{",["<-","env",["as.environment","value"]],["<-","selfEnv",["as.environment",".self"]],["<-","fieldClasses",["@",".refClassDef","fieldClasses"]],["for","field",["names",["@","classDef","fieldClasses"]],["{",["<-","current",["get","field",{"envir":"env"}]],["if",["!",["is","current",["[[","fieldClasses","field"]]],["stop",["gettextf","\"the class of field %s in the object is not compatible with the desired class %s in the target\"",["sQuote","field"],["dQuote",["[[","fieldClasses","field"]]],{"domain":"NA"}]],["assign","field",{"envir":"selfEnv"},"current"]]],["invisible",".self"]],["stop",["gettextf","\"%s is not one of the reference super classes for this object\"",["dQuote","Class"]],{"domain":"NA"}]]]]},{"callSuper":["function",[{"...":""}],["stop","\"direct calls to callSuper() are invalid:  should only be called from another method\""]]},{"initFields":["function",[{"...":""}],["{",["if",["missing","..."],".self",["initRefFields",".self",".refClassDef",["as.environment",".self"],["list","..."]]]]]},{"copy":["function",[{"shallow":"FALSE"}],["{",["<-","def",".refClassDef"],["<-","value",["new","def"]],["<-","vEnv",["as.environment","value"]],["<-","selfEnv",["as.environment",".self"]],["for","field",["names",["@","def","fieldClasses"]],["{",["if","shallow",["assign","field",["get","field",{"envir":"selfEnv"}],{"envir":"vEnv"}],["{",["<-","current",["get","field",{"envir":"selfEnv"}]],["if",["is","current","\"envRefClass\""],["<-","current",[["$","current","copy"],"FALSE"]]],["assign","field","current",{"envir":"vEnv"}]]]]],"value"]]},{"getRefClass":["function",[{"Class":".refClassDef"}],[["::","methods","getRefClass"],"Class"]]},{"getClass":["function",[{"...":""}],["if",["nargs",{}],[["::","methods","getClass"],"..."],".refClassDef"]]},{"field":["function",[{"name":"","value":""}],["if",["missing","value"],[["::","base","get"],"name",{"envir":".self"}],["{",["if",["is.na",["match","name",["names",["@",".refClassDef","fieldClasses"]]]],["stop",["gettextf","\"%s is not a field in this class\"",["sQuote","name"]],{"domain":"NA"}]],[["::","base","assign"],"name","value",{"envir":".self"}]]]]},{"trace":["function",[{"...":"","classMethod":"FALSE"}],["{","' Insert trace debugging for the specified method.  The arguments are\n the same as for the trace() function in package \"base\".  The first argument\n should be the name of the method to be traced, quoted or not.\n\n The additional argument classMethod= can be supplied as TRUE (by name only)\n in order to trace a method in a generator object (e.g., \"new\") rather than\n in the objects generated from that class.\n'",[".TraceWithMethods","...",{"where":".self"},{"classMethod":"classMethod"}]]]},{"untrace":["function",[{"...":"","classMethod":"FALSE"}],["{","' Untrace the method given as the first argument.\n'",[".TraceWithMethods","...",{"untrace":"TRUE"},{"where":".self"},{"classMethod":"classMethod"}]]]},{"show":["function",[],["{",["if",["is.null",["<-","cl",["tryCatch",["class",".self"],{"error":["function",[{"e":""}],"NULL"]}]]],["{",["cat","'Prototypical reference class object\\n'"]],["{",["cat","'Reference class object of class '",["classLabel","cl"],"'\\n'",{"sep":"\"\""}],["<-","fields",["names",["@",".refClassDef","fieldClasses"]]],["for","fi","fields",["{",["cat","'Field \"'","fi","'\":\\n'",{"sep":"\"\""}],[["::","methods","show"],["field","fi"]]]]]]]]},{"usingMethods":["function",[{"...":""}],["{","' Reference methods used by this method are named as the arguments\n either quoted or unquoted.  In the code analysis phase of installing the\n the present method, the declared methods will be included.  It is essntial\n to declare any methods used in a nonstandard way (e.g., via an apply function).\n Methods called directly do not need to be declared, but it is harmless to do so.\n $usingMethods() does nothing at run time.\n'","NULL"]]}]],["<-","makeEnvRefMethods",["function",[],["{",["<-","methods",".envRefMethods"],["<-","allMethods",["names","methods"]],["for","method","allMethods",["{",["<-",["[[","methods","method"],["makeClassMethod",["[[","methods","method"],"method","\"envRefClass\"","\"\"","allMethods"]]]],["<-",["$","methods",".objectParent"],".methodsNamespace"],["<-",["$","methods",".objectPackage"],"\"methods\""],"methods"]]],["<-",".InitRefClasses",["function",[{"envir":""}],["{",["setClass","\"refClassRepresentation\"",["representation",{"fieldClasses":"\"list\""},{"fieldPrototypes":"\"environment\""},{"refMethods":"\"environment\""},{"refSuperClasses":"\"character\""}],{"contains":"\"classRepresentation\""},{"where":"envir"}],["setClassUnion","\"refClass\"",{"where":"envir"}],["setClassUnion","\"refObject\"",["c","\"environment\"","\"externalptr\"","\"name\"","\"refClass\""],{"where":"envir"}],["setClassUnion","\"SuperClassMethod\"","\"character\""],["setClass","\"activeBindingFunction\"",{"contains":"\"function\""}],["setClass","\"defaultBindingFunction\"",["representation",{"field":"\"character\""},{"className":"\"character\""}],{"contains":"\"activeBindingFunction\""}],["setClass","\"uninitializedField\"",["representation",{"field":"\"character\""},{"className":"\"character\""}]],["setClass","\"refMethodDef\"",["representation",{"mayCall":"\"character\""},{"name":"\"character\""},{"refClassName":"\"character\""},{"superClassMethod":"\"SuperClassMethod\""}],{"contains":"\"function\""},{"where":"envir"}],[".makeTraceClass",[".traceClassName","\"refMethodDef\""],"\"refMethodDef\"","FALSE"],["setIs","\"refMethodDef\"","\"SuperClassMethod\"",{"where":"envir"}],["<-","gen",["setClass","\"externalRefMethod\"",{"slots":["c",{"actual":"\"function\""}]},{"contains":"\"refMethodDef\""},{"where":"envir"}]],["assign","\"externalRefMethod\"","gen",{"envir":"envir"}],["setClass","\"envRefClass\"",{"contains":["c","\"environment\"","\"refClass\""]},{"where":"envir"}],["<-","def",["new","\"refClassRepresentation\"",{"refMethods":["as.environment",["makeEnvRefMethods",{}]]}]],["<-",["as","def","\"classRepresentation\""],["getClassDef","\"envRefClass\"",{"where":"envir"}]],["assignClassDef","\"envRefClass\"","def",{"where":"envir"}],["setMethod","\"initialize\"","\"envRefClass\"",[":::","methods",".initForEnvRefClass"],{"where":"envir"}],["setMethod","\"$\"","\"envRefClass\"",".dollarForEnvRefClass",{"where":"envir"}],["setMethod","\"$<-\"","\"envRefClass\"",".dollarGetsForEnvRefClass",{"where":"envir"}],["setMethod","\"show\"","\"envRefClass\"",["function",[{"object":""}],[["$","object","show"],{}]]],["setClass","\"refGeneratorSlot\""],["setClass","\"refObjectGenerator\"",["representation",{"generator":"\"refGeneratorSlot\""}],{"contains":["c","\"classGeneratorFunction\"","\"refClass\""]},{"where":"envir"}],["setMethod","\"$\"","\"refObjectGenerator\"",["function",[{"x":"","name":""}],["eval.parent",["substitute",["$",["@","x","generator"],"name"]]]],{"where":"envir"}],["setMethod","\"$<-\"","\"refObjectGenerator\"",["function",[{"x":"","name":"","value":""}],["eval.parent",["substitute",["<-",["$",["@","x","generator"],"name"],"value"]]]],{"where":"envir"}],["setRefClass","\"refGeneratorSlot\"",{"fields":["list",{"def":"\"ANY\""},{"className":"\"ANY\""}]},{"methods":".GeneratorMethods"},{"where":"envir"}],["setMethod","\"show\"","\"refClassRepresentation\"",["function",[{"object":""}],["showRefClassDef","object"]],{"where":"envir"}],["setMethod","\"show\"","\"refObjectGenerator\"",["function",[{"object":""}],["showRefClassDef",["$","object","def"],"\"Generator for class\""]],{"where":"envir"}],["setMethod","\"show\"","\"refMethodDef\"","showClassMethod",{"where":"envir"}],["setMethod","\"show\"","\"externalRefMethod\"","showClassMethod",{"where":"envir"}],["setMethod","\"initialize\"","\"externalRefMethod\"",["function",[{".Object":"","def":"","...":""}],["{",["<-",["@",".Object",".Data"],["eval",["substitute",["function",[{"...":""}],["{",["<-",".f","DEF"],[".f",".self","..."]]],["list",{"DEF":"def"}]]]],["<-",["@",".Object","actual"],"def"],["callNextMethod",".Object","..."]]],{"where":"envir"}],["setRefClass","\"localRefClass\"",{"methods":".localRefMethods"},{"where":"envir"}],["setMethod","\"$<-\"","\"localRefClass\"",["function",[{"x":"","name":"","value":""}],["{",["<-","w",["parent.frame",{}]],["<-","x",[".ensureLocal","x","w"]],["<-","what",["substitute","name"]],["if",["is.symbol","what"],["<-","what",["as.character","what"]],["<-","what","name"]],["<-","selfEnv",["as.environment","x"]],["envRefSetField","x","what",["refObjectClass","x"],"selfEnv","value"],["invisible","x"]]],{"where":"envir"}]]]],["<-","getRefSuperClasses",["function",[{"classes":"","classDefs":""}],["{",["<-","supers",["character",{}]],["for","i",["seq_along","classes"],["{",["<-","clDef",["[[","classDefs","i"]],["<-","supers",["c","supers",["@","clDef","refSuperClasses"]]]]],["unique","supers"]]]],["<-",".getMethodDefs",["function",[{"what":"","env":""}],["{",["<-","methods",["objects",{"envir":"env"},{"all.names":"TRUE"}]],["<-","missing",["is.na",["match","what","methods"]]],["if",["any","missing"],["{",["warning",["gettextf","\"Methods not found: %s\"",["paste",["dQuote",["[","methods","missing"]],{"collapse":"\", \""}]]],["<-","what",["[","what",["!","missing"]]]]],["if",["<",["length","what"],"1"],["return","NULL"],["if",["==",["length","what"],"1"],["get","what",{"envir":"env"}],["lapply","what",["function",[{"x":""}],["get","x",{"envir":"env"}]]]]]]]],["<-",".GeneratorMethods",["list",{"methods":["function",[{"...":""}],["{",["<-","methodsEnv",["@","def","refMethods"]],["if",["==",["nargs",{}],"0"],["return",["sort",["names","methodsEnv"]]]],["<-","methodDefs",["list","..."]],["if",["&&",["==",["nargs",{}],"1"],["is",["[[","methodDefs","1"],"\"character\""]],["return",[".getMethodDefs",["[[","methodDefs","1"],"methodsEnv"]]],["if",[[":::","methods",".classDefIsLocked"],"def"],["stop",["gettextf","\"the definition of class %s in package %s is locked, methods may not be redefined\"",["dQuote",["@","def","className"]],["sQuote",["@","def","package"]]],{"domain":"NA"}]],["if",["&&",["==",["length","methodDefs"],"1"],["is.list",["[[","methodDefs","1"]]],["<-","methodDefs",["[[","methodDefs","1"]]],["<-","methodDefs",["c","methodDefs",[".thisClassMethods","methodsEnv",["@","def","className"]]]],["<-","mnames",["names","methodDefs"]],["if",["||",["is.null","mnames"],["!",["all",["nzchar","mnames"]]]],["stop","\"arguments to methods() must be named, or one named list\""]],["<-","removeThese",["vapply","methodDefs","is.null","NA"]],["if",["any","removeThese"],["{",["<-","rmNames",["[","mnames","removeThese"]],["<-","mnames",["[","mnames",["!","removeThese"]]],["<-","methodDefs",["[","methodDefs",["!","removeThese"]]],["remove",{"list":"rmNames"},{"envir":"methodsEnv"}],["if",["==",["length","mnames"],"0"],["return",["invisible","methodsEnv"]]]]],["<-","allMethods",["as.list","methodsEnv"]],["<-","newMethods",["insertClassMethods","allMethods","className","methodDefs",["names",["@","def","fieldClasses"]],"FALSE"]],["for","what",["names","newMethods"],["assign","what",["[[","newMethods","what"],{"envir":"methodsEnv"}]],["<-","env",["topenv",["parent.frame",{}]]],["<-","declare","TRUE"],["if",["&&",["!",["is.null",["<-","pkg",["get0","\".packageName\"",{"envir":"env"}]]]],["==","pkg",["@","def","package"]]],["{"],["if",["isNamespaceLoaded",["@","def","package"]],["<-","env",["asNamespace",["@","def","package"]]],["<-","declare","FALSE"]]],["if","declare",[["::","utils","globalVariables"],["names","newMethods"],"env"]],["invisible","methodsEnv"]]]},{"fields":["function",[],["{","'\nReturns the named vector of classes\nfor the fields in this class.  Fields\ndefined with accessor functions have\nclass \"activeBindingFunction\".\n'",["unlist",["@","def","fieldClasses"]]]]},{"new":["function",[{"...":""}],["{",[["::","methods","new"],"def","..."]]]},{"help":["function",[{"topic":""}],["{","'\nPrints simple documentation for the method or field\nspecified by argument topic, which should be the name\nof the method or field, quoted or not.  With no topic,\nprints the definition of the class.\n'",["if",["missing","topic"],["{",["writeLines",["c","'Usage:  $help(topic) where topic is the name of a method (quoted or not)'",["paste","'The definition of class'","className","'follows.'"]]],[["::","methods","show"],"def"]],["{",["if",["is.name",["substitute","topic"]],["<-","topic",["as.character",["substitute","topic"]]],["<-","topic",["as.character","topic"]]],["<-","env",["@","def","refMethods"]],["if",["exists","topic",{"envir":"env"}],["{",["writeLines",[".refMethodDoc","topic","env"]]],["{",["cat",["gettextf","\"topic %s is not a method name in class %s\\nThe class definition follows\\n\"",["sQuote","topic"],["dQuote","className"]]],["show","def"]]]]]]]},{"lock":["function",[{"...":""}],[[":::","methods",".lockRefFields"],"def","..."]]},{"accessors":["function",[{"...":""}],["{",["<-","firstCap",["function",[{"names":""}],["{",["<-","firstChars",["substr","names","1","1"]],["<-","modChars",["toupper","firstChars"]],["<-",["substr","names","1","1"],"modChars"],["list",{"get":["paste0","\"get\"","names"]},{"set":["paste0","\"set\"","names"]}]]]],["if",[[":::","methods",".classDefIsLocked"],"def"],["stop",["gettextf","\"the definition of class %s in package %s is locked so fields may not be modified\"",["dQuote",["@","def","className"]],["sQuote",["@","def","package"]]],{"domain":"NA"}]],["<-","fieldNames",["c","..."]],["<-","methodNames",["firstCap","fieldNames"]],["<-","getters",["$","methodNames","get"]],["<-","setters",["$","methodNames","set"]],["<-","accessors",["list",{}]],["for","i",["seq_along","fieldNames"],["{",["<-","what",["[[","fieldNames","i"]],["<-","field",["as.name","what"]],["<-","CLASS",["[[",["@","def","fieldClasses"],"what"]],["if",["is.null","CLASS"],["stop",["gettextf","\"%s is not a field in class %s\"",["sQuote","what"],["dQuote",["@","def","className"]]],{"domain":"NA"}]],["<-",["[[","accessors",["[[","getters","i"]],["eval",["substitute",["function",[],"X"],["list",{"X":"field"}]]]],["if",["==","CLASS","\"ANY\""],["<-",["[[","accessors",["[[","setters","i"]],["eval",["substitute",["function",[{"value":""}],["{",["<-","value",["as","value","CLASS",{"strict":"FALSE"}]],["<<-","X","value"],["invisible","value"]]],["list",{"X":"field"},{"CLASS":"CLASS"}]]]],["<-",["[[","accessors",["[[","setters","i"]],["eval",["substitute",["function",[{"value":""}],["{",["<<-","X","value"],["invisible","value"]]],["list",{"X":"field"}]]]]]]],["methods","accessors"],["invisible","accessors"]]]}]],["<-",".localRefMethods",["list",{"ensureLocal":["function",[],["{","'Ensure that a shallow copy has been made of this object\nto localize any further changes.  Must be called before any reference\nclass method modifies a field.\n'",[[":::","methods",".ensureLocal"],".self",["parent.frame",{}]]]]}]],["<-",".makeCall",["function",[{"name":"","x":""}],["{",["<-","n",["length",["<-","argls",["formals","x"]]]],["<-","noDeflt",["if",[">","n","0"],["vapply","argls",["function",[{"x":""}],["||",["!",["is.name","x"]],["nzchar",["as.character","x"]]]],"NA"]]],["if","n",["{",["<-","arg.names",["names","argls"]]]],["<-","Call",["paste0","\"$\"","name","\"(\""]],["for","i",["seq_len","n"],["{",["<-","Call",["paste0","Call",["[","arg.names","i"],["if",["[[","noDeflt","i"],"\" = \""]]],["if",["!=","i","n"],["<-","Call",["paste0","Call","\", \""]]]]],["paste0","Call","\")\\n\""]]]],["<-","`insertFields<-`",["function",[{"fieldList":"","value":""}],["{",["<-","newNames",["names","value"]],["<-","hasFields",[">",["match","newNames",["names","fieldList"],"0"],"0"]],["if",["any","hasFields"],["{",["for","field",["[","newNames","hasFields"],["if",["is.na",["match",["[[","fieldList","field"],["c",["extends",["[[","value","field"]],"\"ANY\""]]],["stop",["gettextf","\"the overriding class (\\\"%s\\\") of field %s is not a subclass of the existing field definition (\\\"%s\\\")\"",["[[","value","field"],["sQuote","field"],["[[","fieldList","field"]],{"domain":"NA"}]]]]],["<-",["[","fieldList","newNames"],"value"],"fieldList"]]],["<-",".bindingMetaName",["function",[{"fieldName":""}],["paste0","\".->\"","fieldName"]]],["<-",".makeActiveBinding",["function",[{"thisField":""}],["{",["if",["is","thisField","\"activeBindingFunction\""],"thisField",["new","\"activeBindingFunction\"","thisField"]]]]],["<-",".makeDefaultBinding",["function",[{"fieldName":"","fieldClass":"","readOnly":"FALSE","where":""}],["{",["<-","metaName",[".bindingMetaName","fieldName"]],["if","readOnly",["<-","f",["eval",["substitute",["function",[{"value":""}],["{",["if",["missing","value"],"dummyFieldName",["{",[[":::","methods",".setDummyField"],".self","dummyField","dummyClass","thisField","TRUE","value"],"value"]]]],["list",{"dummyField":"metaName"},{"thisField":"fieldName"},{"dummyClass":"fieldClass"},{"dummyFieldName":["as.name","metaName"]}]]]],["<-","f",["eval",["substitute",["function",[{"value":""}],["{",["if",["missing","value"],"dummyFieldName",["{",[[":::","methods",".setDummyField"],".self","dummyField","dummyClass","thisField","FALSE","value"],"value"]]]],["list",{"dummyField":"metaName"},{"dummyClass":"fieldClass"},{"thisField":"fieldName"},{"dummyFieldName":["as.name","metaName"]}]]]]],["<-",["environment","f"],"where"],["<-","f",["new","\"defaultBindingFunction\"","f",{"field":"fieldName"},{"className":"fieldClass"}]],["<-","init",["(",["if",["isVirtualClass","fieldClass"],["new","\"uninitializedField\"",{"field":"fieldName"},{"className":"fieldClass"}],["new","fieldClass"]]]],["<-","value",["list","f","init"]],["<-",["names","value"],["c","fieldName","metaName"]],"value"]]],["<-",".setDummyField",["function",[{"self":"","metaName":"","fieldClass":"","fieldName":"","onceOnly":"","value":""}],["{",["if",["is","value","fieldClass"],["<-","value",["as","value","fieldClass",{"strict":"FALSE"}]],["stop",["gettextf","\"invalid assignment for reference class field %s, should be from class %s or a subclass (was class %s)\"",["sQuote","fieldName"],["dQuote","fieldClass"],["dQuote",["class","value"]]],{"call.":"FALSE"}]],["<-","selfEnv",["as.environment","self"]],["if","onceOnly",["{",["if",["bindingIsLocked","metaName","selfEnv"],["stop",["gettextf","\"invalid replacement: reference class field %s is read-only\"",["sQuote","fieldName"]],{"call.":"FALSE"}],["{",["assign","metaName","value",{"envir":"selfEnv"}],["lockBinding","metaName","selfEnv"]]]],["assign","metaName","value",{"envir":"selfEnv"}]]]]],["<-","refClassInformation",["function",[{"Class":"","contains":"","fields":"","refMethods":"","where":""}],["{",["if",[">",["length","contains"],"0"],["{",["<-","superClassDefs",["lapply","contains",["function",[{"what":""}],["{",["if",["is","what","\"classRepresentation\""],"what",["if",["is.character","what"],["getClass","what",{"where":"where"}],["stop",["gettextf","\"the 'contains' argument should be the names of superclasses:  got an element of class %s\"",["dQuote",["class","what"]]],{"domain":"NA"}]]]]]]],["<-","missingDefs",["vapply","superClassDefs","is.null","NA"]],["if",["any","missingDefs"],["stop",["gettextf","\"no definition found for inherited class: %s\"",["paste0","'\"'",["[","contains","missingDefs"],"'\"'",{"collapse":"\", \""}]],{"domain":"NA"}]],["<-","superClasses",["unlist",["lapply","superClassDefs",["function",[{"def":""}],["@","def","className"]]],"FALSE"]],["<-","isRefSuperClass",["vapply","superClassDefs",["function",[{"def":""}],["is","def","\"refClassRepresentation\""]],"NA"]]],["{",["<-","superClassDefs",["list",{}]],["<-","superClasses",["character",{}]],["<-","isRefSuperClass",["logical",{}]]]],["if",["!",["any","isRefSuperClass"]],["{",["<-","superClasses",["c","superClasses","\"envRefClass\""]],["<-","isRefSuperClass",["c","isRefSuperClass","TRUE"]],["<-",["[[","superClassDefs","\"envRefClass\""],["getClass","\"envRefClass\"",{"where":"where"}]]]],["<-","refSuperClasses",["[","superClasses","isRefSuperClass"]],["<-","otherRefClasses",["getRefSuperClasses","refSuperClasses",["[","superClassDefs","isRefSuperClass"]]],["<-","refSuperClasses",["unique",["c","refSuperClasses","otherRefClasses"]]],["<-","fieldNames",["names","fields"]],["<-","nf",["length","fields"]],["<-","fieldClasses",["character","nf"]],["<-",["names","fieldClasses"],"fieldNames"],["<-","fieldPrototypes",["list",{}]],["for","i",["seq_len","nf"],["{",["<-","thisName",["[[","fieldNames","i"]],["<-","thisField",["[[","fields","i"]],["if",["is.character","thisField"],["{",["if",["!=",["length","thisField"],"1"],["stop",["gettextf","\"a single class name is needed for field %s, got a character vector of length %d\"",["sQuote","thisName"],["length","thisField"]],{"domain":"NA"}]],["if",["is.null",["getClassDef","thisField",{"where":"where"}]],["stop",["gettextf","\"class %s for field %s is not defined\"",["dQuote","thisField"],["sQuote","thisName"]],{"domain":"NA"}]],["<-",["[[","fieldClasses","i"],"thisField"],["if",["!=","thisField","\"ANY\""],["<-","fieldPrototypes",["c","fieldPrototypes",[".makeDefaultBinding","thisName","thisField",{"where":"where"}]]],["<-",["[[","fieldPrototypes","thisName"],["new","\"uninitializedField\"",{"field":"thisName"},{"className":"\"ANY\""}]]]],["if",["is.function","thisField"],["{",["<-",["[[","fieldClasses","i"],"\"activeBindingFunction\""],["<-",["[[","fieldPrototypes","thisName"],[".makeActiveBinding","thisField"]]],["stop",["gettextf","\"field %s was supplied as an object of class %s; must be a class name or a binding function\"",["sQuote","thisName"],["dQuote",["class","thisField"]]],{"domain":"NA"}]]]]],["<-","fc",["<-","fp",["<-","cm",["list",{}]]]],["for","cl",["rev",["[","superClassDefs","isRefSuperClass"]],["{",["<-","fcl",["@","cl","fieldClasses"]],["<-","fpl",["as.list",["@","cl","fieldPrototypes"],{"all.names":"TRUE"}]],["<-","cml",["as.list",["@","cl","refMethods"],{"all.names":"TRUE"}]],["<-",["insertFields","fc"],"fcl"],["<-",["[","fp",["names","fpl"]],"fpl"],["<-",["[","cm",["names","cml"]],"cml"]]],["<-",["insertFields","fc"],"fieldClasses"],["<-",["[","fp",["names","fieldPrototypes"]],"fieldPrototypes"],["<-","cm",["insertClassMethods","cm","Class","refMethods",["names","fc"],"TRUE"]],["list",{"superClasses":"superClasses"},{"refSuperClasses":"refSuperClasses"},{"fieldClasses":"fc"},{"fieldPrototypes":"fp"},{"refMethods":"cm"}]]]],["<-","superClassMethodName",["function",[{"def":""}],["paste",["@","def","name"],["@","def","refClassName"],{"sep":"\"#\""}]]],["<-","insertClassMethods",["function",[{"methods":"","Class":"","value":"","fieldNames":"","returnAll":""}],["{",["<-","theseMethods",["names","value"]],["<-","prevMethods",["names","methods"]],["<-","allMethods",["unique",["c","theseMethods","prevMethods"]]],["<-","returnMethods",["if","returnAll","methods","value"]],["<-","check","TRUE"],["for","method","theseMethods",["{",["<-","prevMethod",["[[","methods","method"]],["if",["is.null","prevMethod"],["{",["<-","superClassMethod",["if",["identical","method","\"initialize\""],"\"initFields\"","\"\""]]],["if",["identical",["@","prevMethod","refClassName"],"Class"],["<-","superClassMethod",["@","prevMethod","superClassMethod"]],["{",["<-","superClassMethod",["superClassMethodName","prevMethod"]],["<-",["[[","returnMethods","superClassMethod"],"prevMethod"]]]],["<-","def",["makeClassMethod",["[[","value","method"],"method","Class","superClassMethod","allMethods"]],["<-","check",["&&","check",[".checkFieldsInMethod","def","fieldNames","allMethods"]]],["<-",["[[","returnMethods","method"],"def"]]],["if",["&&",["is.na","check"],[".methodsIsLoaded",{}]],["message",["gettextf","\"code for methods in class %s was not checked for suspicious field assignments (recommended package %s not available?)\"",["dQuote","Class"],["sQuote","\"codetools\""]],{"domain":"NA"}]],"returnMethods"]]],["<-","setRefClass",["function",[{"Class":"","fields":["character",{}],"contains":["character",{}],"methods":["list",{}],"where":["topenv",["parent.frame",{}]],"inheritPackage":"FALSE","...":""}],["{",["<-","fields",["inferProperties","fields","\"field\""]],["<-","info",["refClassInformation","Class","contains","fields","methods","where"]],["<-","superClasses",["<-","refSuperClasses",["<-","fieldClasses",["<-","fieldPrototypes",["<-","refMethods","NULL"]]]]],["for","what",["c","\"superClasses\"","\"refSuperClasses\"","\"fieldClasses\"","\"fieldPrototypes\"","\"refMethods\""],["assign","what",["[[","info","what"]]],["<-","classFun",["setClass","Class",{"contains":"superClasses"},{"where":"where"},"..."]],["<-","classDef",["new","\"refClassRepresentation\"",["getClassDef","Class",{"where":"where"}],{"fieldClasses":"fieldClasses"},{"refMethods":["as.environment","refMethods"]},{"fieldPrototypes":["as.environment","fieldPrototypes"]},{"refSuperClasses":"refSuperClasses"}]],[".setObjectParent",["@","classDef","refMethods"],["if","inheritPackage","refSuperClasses","NULL"],"where"],["assignClassDef","Class","classDef","where"],["<-","generator",["new","\"refGeneratorSlot\""]],["<-","env",["as.environment","generator"]],["<-",["$","env","def"],"classDef"],["<-",["$","env","className"],"Class"],[".declareVariables","classDef","where"],["<-","value",["new","\"refObjectGenerator\"","classFun",{"generator":"generator"}]],["invisible","value"]]]],["<-","getRefClass",["function",[{"Class":"","where":["topenv",["parent.frame",{}]]}],["{",["if",["is","Class","\"refClassRepresentation\""],["{",["<-","classDef","Class"],["<-","Class",["@","classDef","className"]]],["if",["is.character","Class"],["{",["<-","classDef",["getClass","Class",{"where":"where"}]],["if",["!",["is","classDef","\"refClassRepresentation\""]],["stop",["gettextf","\"class %s is defined but is not a reference class\"",["dQuote","Class"]],{"domain":"NA"}]]],["stop",["gettextf","\"class must be a reference class representation or a character string; got an object of class %s\"",["dQuote",["class","Class"]]],{"domain":"NA"}]]],["<-","generator",["new","\"refGeneratorSlot\""]],["<-","env",["as.environment","generator"]],["<-",["$","env","className"],"Class"],["<-",["$","env","def"],"classDef"],["<-","classFun",["classGeneratorFunction","Class","where"]],["<-",["@","classFun","package"],["@","classDef","package"]],["new","\"refObjectGenerator\"","classFun",{"generator":"generator"}]]]],["<-","refClassFields",["function",[{"Class":""}],["{",["<-","ClassDef",["getClass","Class"]],["if",["is","ClassDef","\"refClassRepresentation\""],["@","ClassDef","fieldClasses"],["stop",["gettextf","\"not a reference class: %s\"",["@","ClassDef","name"]],{"domain":"NA"}]]]]],["<-","refClassMethods",["function",[{"Class":""}],["{",["<-","ClassDef",["getClass","Class"]],["if",["is","ClassDef","\"refClassRepresentation\""],["<-","value",["as.list",["@","ClassDef","refMethods"]]],["stop",["gettextf","\"not a reference class: %s\"",["@","ClassDef","name"]],{"domain":"NA"}]],["for","i",["seq_along","value"],["<-",["[[","value","i"],["as",["[[","value","i"],"\"function\""]]],"value"]]],["<-","showClassMethod",["function",[{"object":""}],["{",["<-","cl",["class","object"]],["cat","\"Class method definition\""],["if",["!",[".identC","cl","\"refMethodDef\""]],["cat",["sprintf","\" (class %s)\"",["dQuote","cl"]]]],["cat",["sprintf","\" for method %s()\\n\"",["@","object","name"]]],["if",["is","object","\"externalRefMethod\""],["show",["@","object","actual"]],["show",["as","object","\"function\""]]],["if",["length",["@","object","mayCall"]],[".printNames","\"\\nMethods used: \"",["@","object","mayCall"]]]]]],["<-",".printNames",["function",[{"header":"","names":"","separateLine":"TRUE"}],["{",["<-","names",["paste0","'\"'","names","'\"'"]],["if","separateLine",["{",["cat","header","\"\\n\"",{"sep":"\"\""}],["cat","names",{"sep":"\", \""},{"fill":"TRUE"},{"labels":"\"    \""}]],["{",["cat","header","\": \"",{"sep":"\"\""}],["cat","names",{"sep":"\", \""},{"fill":"TRUE"}]]],["cat","\"\\n\""]]]],["<-","showRefClassDef",["function",[{"object":"","title":"\"Reference Class\""}],["{",["cat","title","\" \\\"\"",["@","object","className"],"\"\\\":\\n\"",{"sep":"\"\""}],["<-","fields",["@","object","fieldClasses"]],["if",["length","fields"],["{",["printPropertiesList","fields","\"Class fields\""],["<-","locked",[".getLockedFieldNames","object"]],["if",["length","locked"],[".printNames","\"Locked Fields\"","locked","FALSE"]]],["cat","\"\\nNo fields defined\\n\""]],["<-","methods",["names",["@","object","refMethods"]]],["if",["length","methods"],[".printNames","\"\\nClass Methods: \"","methods"],["cat","\"\\nNo Class Methods\\n\""]],["<-","supers",["@","object","refSuperClasses"]],["if",["length","supers"],[".printNames","\"Reference Superclasses: \"","supers"]]]]],["<-",".assignExpr",["function",[{"e":""}],["{",["<-","value",["list",{}]],["<-",["[[","value",[["::","codetools","getAssignedVar"],"e"]],["deparse","e",{"nlines":"1L"}]],"value"]]],["<-",".mergeAssigns",["function",[{"previous":"","new":""}],["{",["for","what",["names","new"],["{",["<-",["[[","previous","what"],["if",["is.null",["[[","previous","what"]],["[[","new","what"],["paste",["[[","previous","what"],["[[","new","what"],{"sep":"\"; \""}]]]]],"previous"]]],["<-",".assignedVars",["function",[{"e":""}],["{",["<-","locals",["list",{}]],["<-","globals",["list",{}]],["<-","walker",[["::","codetools","makeCodeWalker"],{"call":["function",[{"e":"","w":""}],["{",["<-","callto",["[[","e","1"]],["if",["is.symbol","callto"],["switch",["as.character","callto"],{"\"<-\"":""},{"\"=\"":["{",["<<-","locals",[".mergeAssigns","locals",[".assignExpr","e"]]]]},{"\"<<-\"":["{",["<<-","globals",[".mergeAssigns","globals",[".assignExpr","e"]]]]}]],["for","ee",["as.list","e"],["if",["!",["missing","ee"]],[["::","codetools","walkCode"],"ee","w"]]]]]},{"leaf":["function",[{"e":"","w":""}],"NULL"]}]],[["::","codetools","walkCode"],"e","walker"],["list",{"locals":"locals"},{"globals":"globals"}]]]],["<-",".checkFieldsInMethod",["function",[{"methodDef":"","fieldNames":"","methodNames":""}],["{",["if",["!",[".hasCodeTools",{}]],["return","NA"]],["<-","p0q",["function",[{"x":""}],["paste0","'\"'","x","'\"'",{"collapse":"\"; \""}]]],["if",["is","methodDef","\"refMethodDef\""],["{",["<-","methodName",["p0q",["@","methodDef","name"]]],["<-","className",["p0q",["@","methodDef","refClassName"]]]],["{",["<-","methodName",["<-","className","\"\""]]]],["<-","assigned",[".assignedVars",["body","methodDef"]]],["<-","locals",["names",["$","assigned","locals"]]],["<-","localsAreFields",[">",["match","locals","fieldNames","0"],"0"]],["if",["any","localsAreFields"],["warning",["gettextf","\"local assignment to field name will not change the field:\\n    %s\\n Did you mean to use \\\"<<-\\\"? ( in method %s for class %s)\"",["paste",["[",["unlist",["$","assigned","locals"]],"localsAreFields"],{"collapse":"\"; \""}],"methodName","className"],{"domain":"NA"}]],["<-","globals",["names",["$","assigned","globals"]]],["<-","globalsNotFields",["is.na",["match","globals",["c","fieldNames","\".self\""]]]],["if",["any","globalsNotFields"],["warning",["gettextf","\"non-local assignment to non-field names (possibly misspelled?)\\n    %s\\n( in method %s for class %s)\"",["paste",["[",["unlist",["$","assigned","globals"]],"globalsNotFields"],{"collapse":"\"; \""}],"methodName","className"],{"domain":"NA"}]],["<-","globalsInMethods",[">",["match","globals","methodNames","0"],"0"]],["if",["any","globalsInMethods"],["stop",["gettextf","\"non-local assignment to method names is not allowed\\n    %s\\n( in method %s for class %s)\"",["paste",["[",["unlist",["$","assigned","globals"]],"globalsInMethods"],{"collapse":"\"; \""}],"methodName","className"],{"domain":"NA"}]],["&&",["!",["any","localsAreFields"]],["!",["any","globalsNotFields"]]]]]],["<-",".refMethodDoc",["function",[{"topic":"","env":""}],["{",["<-","f",["get","topic",{"envir":"env"}]],["<-","msg",["c","\"Call:\"",[".makeCall","topic","f"],"\"\""]],["<-","bb",["body","f"]],["if",["&&",["&&",["is","bb","\"{\""],[">",["length","bb"],"1"]],["is",["[[","bb","2"],"\"character\""]],["<-","msg",["c","msg",["[[","bb","2"],"\"\""]]],"msg"]]],["<-",".lockedFieldsMetaName","\".#lockedFields\""],["<-",".getLockedFieldNames",["function",[{"def":""}],["{",["<-","env",["@","def","fieldPrototypes"]],["<-","value",["[[","env",".lockedFieldsMetaName"]],["if",["is.null","value"],["character",{}],"value"]]]],["<-",".setLockedFieldNames",["function",[{"def":"","value":""}],["{",["<-","env",["@","def","fieldPrototypes"]],["<-",["[[","env",".lockedFieldsMetaName"],"value"],"value"]]],["<-",".lockRefFields",["function",[{"def":"","...":""}],["{",["<-","lockedFields",[".getLockedFieldNames","def"]],["if",["<",["nargs",{}],"2"],["return","lockedFields"]],["<-","fields",["c","..."]],["if",["&&",["is.character","fields"],["all",["nzchar","fields"]]],["{"],["stop","\"arguments must all be character string names of fields\""]],["if",[".classDefIsLocked","def"],["stop",["gettextf","\"the definition of class %s in package %s is locked so fields may not be modified\"",["dQuote",["@","def","className"]],["sQuote",["@","def","package"]]],{"domain":"NA"}]],["<-","env",["@","def","fieldPrototypes"]],["<-","className",["@","def","className"]],["for","what","fields",["{",["if",["%in%","what","lockedFields"],["{",["warning",["gettextf","\"field %s is already locked\"",["sQuote","what"]],{"domain":"NA"}],["next"]]],["<-","current",["[[","env","what"]],["if",["is.null","current"],["stop",["gettextf","\"%s is not a field in class %s\"",["sQuote","what"],["dQuote","className"]],{"domain":"NA"}]],["if",["is","current","\"activeBindingFunction\""],["{",["if",["is","current","\"defaultBindingFunction\""],["<-",["[[","env","what"],["[[",[".makeDefaultBinding",["@","current","field"],["@","current","className"],"TRUE",["environment","current"]],"what"]],["stop",["gettextf","\"field %s of class %s has a non-default binding and cannot be locked\"",["sQuote","what"],["dQuote","className"]],{"domain":"NA"}]]],["{",["<-","binding",[".makeDefaultBinding",["@","current","field"],["@","current","className"],"TRUE",["environment","current"]]],["<-",["[[","env","what"],["[[","binding","what"]],["<-","metaName",[".bindingMetaName","what"]],["<-",["[[","env","metaName"],"current"]]],["<-","lockedFields",["c","lockedFields","what"]]]],[".setLockedFieldNames","def","lockedFields"],["invisible","env"]]]],["<-",".setObjectParent",["function",[{"refMethods":"","refSuperClasses":"","where":""}],["{",["<-","env",["<-","empty",["emptyenv",{}]]],["for","cl","refSuperClasses",["{",["if",["identical","cl","\"envRefClass\""],["break"]],["<-","clRefMethods",["@",["getClass","cl"],"refMethods"]],["<-","clEnv",["$","clRefMethods",".objectParent"]],["if",["identical","env","empty"],["{",["<-","env","clEnv"],["<-","pkg",["$","clRefMethods",".objectPackage"]]],["if",["!",["identical","clEnv","env"]],["{",["<-",".nQuote",["function",[{"what":""}],["paste0","'\"'","what","'\"'"]]],["stop",["gettextf","\"Reference superclasses must come from the same package for the environment to be defined:  got %s and %s\"",[".nQuote",["$","clRefMethods",".objectPackage"]],[".nQuote","pkg"]]]]]]]],["if",["identical","env","empty"],["{",["<-","pkg",["$","where",".packageName"]],["if",["is.null","pkg"],["<-","pkg","\".GlobalEnv\""]],["<-",["$","refMethods",".objectParent"],"where"],["<-",["$","refMethods",".objectPackage"],"pkg"]],["{",["<-",["$","refMethods",".objectParent"],"env"],["<-",["$","refMethods",".objectPackage"],"pkg"]]]]]],["<-",".declareVariables",["function",[{"def":"","env":""}],["{",[["::","utils","globalVariables"],["c",["names",["@","def","fieldClasses"]],["names",["@","def","refMethods"]],"\".self\""],"env"]]]],["<-",".declaredMethods",["function",[{"method":""}],["{",["<-","methods",["character",{}]],["if",["!",[".hasCodeTools",{}]],["return","methods"]],["<-",".theseMethods",["function",[{"e":"","w":""}],["{",["if",["<",["length","e"],"2"],["character",{}],["sapply",["[",["as.list","e"],["-","1"]],["function",[{"what":""}],["<<-","methods",["c","methods",["if",["is.symbol","what"],["as.character","what"],["if",["is.character","what"],"what",["character",{}]]]]]]]]]]],["<-","walker",[["::","codetools","makeCodeWalker"],{"handler":["function",[{"v":"","w":""}],["{",["if",["identical","v","\"usingMethods\""],".theseMethods","NULL"]]]},{"leaf":["function",[{"e":"","w":""}],"NULL"]}]],[["::","codetools","walkCode"],["body","method"],"walker"],["unique","methods"]]]],["<-","getMethodsAndAccessors",["function",[{"Class":""}],["{",["<-","def",["getClass","Class"]],["if",["!",["is","def","\"refClassRepresentation\""]],["stop",["gettextf","\"%s is not a reference class\"",["dQuote",["@","def","className"]]]]],["<-","ff",["@","def","fieldPrototypes"]],["<-","accs",["vapply","ff",["function",[{"what":""}],["&&",["is","what","\"activeBindingFunction\""],["!",["is","what","\"defaultBindingFunction\""]]]],"NA"]],["c",["as.list",["@","def","refMethods"]],["[",["as.list","ff"],"accs"]]]]],["<-",".ensureLocal",["function",[{"object":"","where":""}],["{",["if",["!",["is","object","\"envRefClass\""]],["stop",["gettextf","\"Class %s is not a subclass of %s; functional semantics not defined for this class\"",["dQuote",["class","object"]],["dQuote","\"envRefClass\""]]]],["<-","selfEnv",["as.environment","object"]],["if",["exists","\".localRefObjects\"",{"envir":"where"},{"inherits":"FALSE"}],["{",["<-","locals",["get","\".localRefObjects\"",{"envir":"where"}]],["for","i",["rev",["seq_along","locals"]],["if",["identical","selfEnv",["[[","locals","i"]],["return","object"]]]],["<-","locals",["list",{}]]],["<-","what","NULL"],["for","obj",["as.list","where",{"all.names":"TRUE"}],["{",["if",["&&",["is","obj","\"envRefClass\""],["identical","selfEnv",["as.environment","obj"]]],["{",["<-","what","obj"],["break"]]]]],["if",["is.null","what"],["stop","\"Could not find local object in supplied environment\""]],["<-","value",[".shallowCopy","object","selfEnv"]],["<-",["[[","locals",["+",["length","locals"],"1"]],["as.environment","value"]],["assign","\".localRefObjects\"","locals",{"envir":"where"}],"value"]]],["<-",".shallowCopy",["function",[{"object":"","selfEnv":""}],["{",["<-","newEnv",["list2env",["as.list","selfEnv",{"all.names":"TRUE"}],{"hash":"TRUE"}]],["<-",["attr","object","\".xData\""],"newEnv"],["assign","\".self\"","object",{"envir":"newEnv"}],"object"]]],["<-",".thisClassMethods",["function",[{"methodsEnv":"","className":""}],["{",["<-","value",["list",{}]],["for","what",["names","methodsEnv"],["{",["<-","def",["get","what",{"envir":"methodsEnv"}]],["if",["&&",["is","def","\"refMethodDef\""],["==",["@","def","refClassName"],"className"]],["<-",["[[","value","what"],["@","def",".Data"]]]]],"value"]]]]
