[[],["<-","MethodsList",["function",[{".ArgName":"","...":""}],["{",[".MlistDeprecated","\"MethodsList()\""],["<-","value",["makeMethodsList",["list","..."]]],["if",["is.name",".ArgName"],["{"],["if",["&&",["is.character",".ArgName"],["==",["length",".ArgName"],"1"]],["<-",".ArgName",["as.name",".ArgName"]],["stop","\"invalid first argument: should be the name of the first argument in the dispatch\""]]],["<-",["slot","value","\"argument\""],".ArgName"],"value"]]],["<-","makeMethodsList",["function",[{"object":"","level":"1"}],["{",[".MlistDeprecated","\"makeMethodsList()\""],["<-","mnames",["allNames","object"]],["if",[".noMlists",{}],["{",["<-","keep",["%in%","mnames",["c","\"\"","\"ANY\""]]],["<-","mnames",["[","mnames","keep"]],["<-","object",["[","object","keep"]]]],["<-","value",["new","\"MethodsList\""]],["<-","i",["match","\"\"","mnames"]],["if",["!",["is.na","i"]],["{",["<-",["[[","mnames","i"],"\"ANY\""],["<-",["names","object"],"mnames"]]],["if",["anyDuplicated","mnames"],["stop",["gettextf","\"duplicate element names in 'MethodsList' at level %d: %s\"","level",["paste","\"\\\"\"",["unique",["[","mnames",["duplicated","mnames"]]],"\"\\\"\"",{"collapse":"\", \""}]],{"domain":"NA"}]],["for","i",["seq_along","object"],["{",["<-","eli",["[[","object","i"]],["if",["||",["is.function","eli"],["is","eli","\"MethodsList\""]],["{"],["if",["||",["is","eli","\"list\""],["is","eli","\"named\""]],["<-",["[[","object","i"],["Recall","eli","NULL",["+","level","1"]]],["stop",["gettextf","\"element %d at level %d (class %s) cannot be interpreted as a function or named list\"","i","level",["dQuote",["class","eli"]]],{"domain":"NA"}]]]]],["<-",["slot","value","\"methods\""],"object"],"value"]]],["<-","SignatureMethod",["function",[{"names":"","signature":"","definition":""}],["{",[".MlistDeprecated","\"SignatureMethod()\""],["<-","n",["length","signature"]],["if",[">","n",["length","names"]],["stop","\"arguments 'names' and 'signature' must have the same length\""]],["if",["==","n","0"],["return","definition"]],["<-","Class",["[[","signature","n"]],["<-","name",["[[","names","n"]],["<-","m",["MethodsList","name"]],["<-",["[[",["slot","m","\"methods\""],"Class"],"definition"],["<-",["slot","m","\"argument\""],["as.name","name"]],["SignatureMethod",["[","names",["-","n"]],["[","signature",["-","n"]],"m"]]]],["<-","insertMethod",["function",[{"mlist":"","signature":"","args":"","def":"","cacheOnly":"FALSE"}],["{",[".MlistDeprecated","\"insertMethod()\""],["if",["&&",[".noMlists",{}],["!",["identical",["unique","signature"],"\"ANY\""]]],["return","mlist"]],["if",["&&",["identical",["[","args","1L"],"\"...\""],["!",["identical",["names","signature"],"\"...\""]]],["{",["if",["identical",["[[","signature","1L"],"\"ANY\""],["stop",["gettextf","\"inserting method with invalid signature matching argument '...' to class %s\"",["dQuote",["[[","signature","1L"]]],{"domain":"NA"}]],["<-","args",["[","args",["-","1L"]]],["<-","signature",["[","signature",["-","1L"]]],["if",["==",["length","signature"],"0L"],["return","mlist"]]]],["if",["==",["length","signature"],"0L"],["stop","\"inserting method corresponding to empty signature\""]],["if",["!",["is","mlist","\"MethodsList\""]],["stop",["gettextf","\"inserting method into non-methods-list object (class %s)\"",["dQuote",[".class1","mlist"]]],{"domain":"NA"}]],["if",["&&",[">",["length","args"],"1"],["!","cacheOnly"]],["<-","mlist",["balanceMethodsList","mlist","args"]]],["<-","Class",["[[","signature","1"]],["<-","methods",["if","cacheOnly",["@","mlist","allMethods"],["@","mlist","methods"]]],["<-","current",["[[","methods","Class"]],["if",["is","current","\"MethodsList\""],["{",["<-","nextArg",["as.character",["@","current","argument"]]],["<-","sigArgs","args"],["<-","n",["length","signature"]],["<-",["length","sigArgs"],"n"],["if",["is.na",["match","nextArg","sigArgs"]],["{",["<-","n",["-",["match","nextArg","args"],"n"]],["if",["is.na","n"],["{",["<-","n","1"],["<-","args",["c","args","nextArg"]]]],["<-","signature",["c","signature",["rep","\"ANY\"","n"]]]]]]],["if",["==",["length","signature"],"1"],["{",["if",["is.null","current"],["{",["if",["!",["is.null","def"]],["<-",["[[","methods","Class"],"def"]]],["{",["<-","which",["match","Class",["names","methods"]]],["if",["is.null","def"],["<-","methods",["[","methods",["-","which"]]],["<-",["[[","methods","which"],"def"]]]]],["{",["if",["is.null","current"],["<-","current",["new","\"MethodsList\"",{"argument":["as.name",["[","args","2L"]]}]],["if",["is.function","current"],["<-","current",["new","\"MethodsList\"",{"argument":["as.name",["[","args","2L"]]},{"methods":["list",{"ANY":"current"}]}]]]],["<-",["[[","methods","Class"],["Recall","current",["[","signature",["-","1L"]],["[","args",["-","1L"]],"def","cacheOnly"]]]],["<-",["@","mlist","allMethods"],"methods"],["if",["!","cacheOnly"],["<-",["@","mlist","methods"],"methods"]],"mlist"]]],["<-","MethodsListSelect",["function",[{"f":"","env":"","mlist":"NULL","fEnv":["if",["is","fdef","\"genericFunction\""],["environment","fdef"],["baseenv",{}]],"finalDefault":["finalDefaultMethod","mlist"],"evalArgs":"TRUE","useInherited":"TRUE","fdef":["getGeneric","f",{"where":"env"}],"resetAllowed":"TRUE"}],["{",[".MlistDeprecated","\"MethodsListSelect()\""],["if",["!","resetAllowed"],["<-","resetMlist",[".getMethodsForDispatch","fdef"]]],["if",["is.null","f"],["{"],["{",["<-","fMethods",[".getMethodsForDispatch","fdef"]],["if",["||",["is.null","mlist"],["(",["&&","evalArgs",["is.function","fMethods"]]]],["<-","mlist","fMethods"]]]],["<-","resetNeeded",[".setIfBase","f","fdef","mlist"]],["if","resetNeeded",["{",["on.exit",[".setMethodsForDispatch","f","fdef","mlist"]]]],["if",["!",["is","mlist","\"MethodsList\""]],["{",["if",["is.function","mlist"],["{",["on.exit",{}],["return","mlist"]]],["if",["is.null","f"],["stop","\"invalid method sublist\""],["if",["!",["is.null","mlist"]],["stop",["gettextf","\"%f is not a valid generic function: methods list was an object of class %s\"",["sQuote","f"],["dQuote",["class","mlist"]]],{"domain":"NA"}]]]]],["if",["!",["is.logical","useInherited"]],["stop",["gettextf","\"%s must be TRUE, FALSE, or a named logical vector of those values; got an object of class %s\"",["sQuote","\"useInherited\""],["dQuote",["class","useInherited"]]],{"domain":"NA"}]],["if",["identical","mlist",[".getMethodsForDispatch","fdef"]],["{",["<-","resetNeeded","TRUE"],[".setMethodsForDispatch","f","fdef","finalDefault"],["if",["is","mlist","\"MethodsList\""],["{",["on.exit",[".setMethodsForDispatch","f","fdef","mlist"]]]]]],["<-","argName",["slot","mlist","\"argument\""]],["<-","arg","NULL"],["if","evalArgs",["{",["if",["missingArg","argName","env","TRUE"],["<-","thisClass","\"missing\""],["{",["<-","arg",["eval",["as.name","argName"],"env"]],["if",["missing","arg"],["return","finalDefault"]],["<-","thisClass",[".class1","arg"]]]]],["<-","thisClass",["get",["as.character","argName"],{"envir":"env"},{"inherits":"FALSE"}]]],["if",["||",["isTRUE","useInherited"],["isFALSE","useInherited"]],["<-","thisInherit",["<-","nextUseInherited","useInherited"]],["{",["<-","which",["match",["as.character","argName"],["names","useInherited"]]],["if",["is.na","which"],["{",["<-","nextUseInherited","useInherited"],["<-","thisInherit","TRUE"]],["{",["<-","thisInherit",["[[","useInherited","which"]],["<-","nextUseInherited",["[","useInherited",["-","which"]]]]]]],["<-","fromClass","thisClass"],["<-","allMethods",["@","mlist","allMethods"]],["<-","which",["match","thisClass",["names","allMethods"]]],["<-","inherited",["is.na","which"]],["<-","selection",["if","inherited","NULL",["[[","allMethods","which"]]],["if",["!","inherited"],["{",["if",["is.function","selection"],["{",["if",["is.null","f"],["{",["<-","mlist",[".trimMlist","mlist","fromClass"]]]],["<-","value","mlist"]],["{",["<-","method",["Recall","NULL","env","selection",{"finalDefault":"finalDefault"},{"evalArgs":"evalArgs"},{"useInherited":"nextUseInherited"},{"fdef":"fdef"},{}]],["if",["is","method","\"EmptyMethodsList\""],["<-","value","method"],["{",["<-",["[[",["@","mlist","allMethods"],"which"],"method"],["<-","value","mlist"]]]]]]],["if",["||","inherited",["is","value","\"EmptyMethodsList\""]],["{",["<-","method","NULL"],["if","thisInherit",["{",["<-","allSelections",["inheritedSubMethodLists","arg","fromClass","mlist","env"]],["<-","allClasses",["names","allSelections"]],["for","i",["seq_along","allSelections"],["{",["<-","selection",["[[","allSelections","i"]],["<-","fromClass",["[[","allClasses","i"]],["if",["is.function","selection"],["<-","method","selection"],["if",["is","selection","\"MethodsList\""],["{",["<-","method",["Recall","NULL","env","selection",{"finalDefault":"finalDefault"},{"evalArgs":"evalArgs"},{"useInherited":"nextUseInherited"},{"fdef":"fdef"}]],["if",["is","method","\"EmptyMethodsList\""],["<-","selection","method"]]]]],["if",["!",["is","selection","\"EmptyMethodsList\""]],["break"]]]]]],["if",["&&",["&&",["(",["||",["is.null","selection"],["is","selection","\"EmptyMethodsList\""]]],["!",["is.null","f"]]],["!",["is.null","finalDefault"]]],["{",["<-","method","finalDefault"],["<-","fromClass","\"ANY\""]]],["if",["||",["is.null","method"],["is","method","\"EmptyMethodsList\""]],["<-","value",["emptyMethodsList","mlist","thisClass"]],["{",["<-","method",["MethodAddCoerce","method","argName","thisClass","fromClass"]],["<-","value",[".insertCachedMethods","mlist",["as.character","argName"],"thisClass","fromClass","method"]]]]]],["if",["!",["is.null","f"]],["{",["if",["is","value","\"EmptyMethodsList\""],["<-","value","NULL"]],["if","resetNeeded",["{",["on.exit",{}],["if","resetAllowed",["{",["if",["is.null","value"],["<-","resetMlist","mlist"],["<-","resetMlist","value"]]]],[".setMethodsForDispatch","f","fdef","resetMlist"],["if",["dispatchIsInternal","fdef"],["setPrimitiveMethods","f","finalDefault","\"set\"","fdef","resetMlist"]]]]]],"value"]]],["<-","emptyMethodsList",["function",[{"mlist":"","thisClass":"\"ANY\"","sublist":["list",{}]}],["{",[".MlistDeprecated","\"emptyMethodsList()\""],["<-",["[","sublist","thisClass"],["list","NULL"]],["new","\"EmptyMethodsList\"",{"argument":["@","mlist","argument"]},{"sublist":"sublist"}]]]],["<-","insertMethodInEmptyList",["function",[{"mlist":"","def":""}],["{",[".MlistDeprecated","\"insertMethodInEmptyList()\""],["<-","value",["new","\"MethodsList\"",{"argument":["@","mlist","argument"]}]],["<-","sublist",["@","mlist","sublist"]],["<-","submethods",["[[","sublist","1L"]],["if",["is.null","submethods"],["<-",["[[","sublist","1L"],"def"],["<-",["[[","sublist","1L"],["Recall","submethods","def"]]],["<-",["@","value","allMethods"],"sublist"],"value"]]],["<-","finalDefaultMethod",["function",[{"method":""}],["{",["repeat",["{",["if",["||",["is.function","method"],["is.null","method"]],["break"]],["if",["is","method","\"MethodsList\""],["{",[".MlistDeprecated",{}],["<-","method",["[[",["slot","method","\"methods\""],"\"ANY\""]]],["stop",["gettextf","\"default method must be a method definition, a primitive or NULL: got an object of class %s\"",["dQuote",["class","method"]]],{"domain":"NA"}]]]],"method"]]],["<-","inheritedSubMethodLists",["function",[{"object":"","thisClass":"","mlist":"","ev":""}],["{",[".MlistDeprecated","\"inheritedSubMethodLists()\""],["<-","methods",["slot","mlist","\"methods\""]],["<-","defaultMethod",["[[","methods","\"ANY\""]],["<-","classes",["names","methods"]],["<-","value",["list",{}]],["if",[".identC","thisClass","\"missing\""],["{"],["{",["<-","classDef",["getClassDef","thisClass","ev"]],["<-","useSuperClasses",["&&",["!",["is.null","classDef"]],["!",["@","classDef","sealed"]]]],["if","useSuperClasses",["{",["<-","superClasses",["names",["@","classDef","contains"]]],["<-","classes",["[","superClasses",["!",["is.na",["match","superClasses","classes"]]]]],["for","which",["seq_along","classes"],["{",["<-","tryClass",["[[","classes","which"]],["if",["||",["is.null","object"],["is","object","tryClass"]],["{",["<-",["[[","value","tryClass"],["[[","methods","tryClass"]]]]]]],["{",["for","which",["seq_along","classes"],["{",["<-","tryClass",["[[","classes","which"]],["<-","tryClassDef",["getClassDef","tryClass","ev"]],["if",["&&",["!",["is.null","tryClassDef"]],["!",["is.na",["match","thisClass",["names",["@","tryClassDef","subclasses"]]]]]],["<-",["[[","value","tryClass"],["[[","methods","which"]]]]]]]]],["if",["!",["is.null","defaultMethod"]],["<-",["[[","value","\"ANY\""],"defaultMethod"]],"value"]]],["<-","matchSignature",["function",[{"signature":"","fun":"","where":["baseenv",{}]}],["{",["if",["!",["is","fun","\"genericFunction\""]],["stop",["gettextf","\"trying to match a method signature to an object (of class %s) that is not a generic function\"",["dQuote",["class","fun"]]],{"domain":"NA"}]],["<-","anames",["@","fun","signature"]],["if",["==",["length","signature"],"0L"],["return",["character",{}]]],["if",["is","signature","\"character\""],["{",["<-","pkgs",["packageSlot","signature"]],["if",["is.null","pkgs"],["<-","pkgs",["character",["length","signature"]]],["if",["!=",["length","pkgs"],["length","signature"]],["stop","\"invalid 'package' slot or attribute, wrong length\""]]],["<-","sigClasses",["as.character","signature"]]],["if",["is","signature","\"list\""],["{",["<-","sigClasses",["<-","pkgs",["character",["length","signature"]]]],["for","i",["seq_along","signature"],["{",["<-","cli",["[[","signature","i"]],["if",["is","cli","\"classRepresentation\""],["{",["<-",["[[","sigClasses","i"],["@","cli","className"]],["<-",["[[","pkgs","i"],["@","cli","package"]]],["if",["&&",["is","cli","\"character\""],["==",["length","cli"],"1"]],["{",["<-",["[[","sigClasses","i"],"cli"],["<-","pkgi",["packageSlot","cli"]],["if",["is.character","pkgi"],["<-",["[[","pkgs","i"],"pkgi"]]],["stop",["gettextf","\"invalid element in a list for \\\"signature\\\" argument; element %d is neither a class definition nor a class name\"","i"],{"domain":"NA"}]]]]]],["stop",["gettextf","\"trying to match a method signature of class %s; expects a list or a character vector\"",["dQuote",["class","signature"]]],{"domain":"NA"}]]],["if",["!",["identical","where",["baseenv",{}]]],["{",["<-","unknown",["!",["nzchar","pkgs"]]],["for","i",["[",["seq_along","sigClasses"],"unknown"],["{",["<-","cli",["getClassDef",["[[","sigClasses","i"],"where"]],["if",["!",["is.null","cli"]],["{",["<-",["[[","pkgs","i"],["@","cli","package"]],["<-",["[[","unknown","i"],"FALSE"]]]]],["if",["any","unknown"],["{",["<-","unknown",["unique",["[","sigClasses","unknown"]]],["<-","MSG",["if",["&&",["identical",["as.vector",["@","coerce","generic"]],"\"coerce\""],["==",["length","unknown"],"1"]],"message",["function",[{"...":""}],["warning","...",{"call.":"FALSE"}]]]],["MSG",[".renderSignature",["@","fun","generic"],"signature"],["sprintf",["ngettext",["length","unknown"],"\"no definition for class %s\"","\"no definition for classes %s\""],["paste",["dQuote","unknown"],{"collapse":"\", \""}]],{"domain":"NA"}]]]]],["<-","signature",["as.list","signature"]],["if",["!=",["length","sigClasses"],["length","signature"]],["stop",["gettextf","\"object to use as a method signature for function %s does not look like a legitimate signature (a vector of single class names): there were %d class names, but %d elements in the signature object\"",["sQuote",["@","fun","generic"]],["length","sigClasses"],["length","signature"]],{"domain":"NA"}]],["if",["is.null",["names","signature"]],["{",["<-","which",["seq_along","signature"]],["if",[">",["length","which"],["length","anames"]],["stop",["gettextf","\"more elements in the method signature (%d) than in the generic signature (%d) for function %s\"",["length","which"],["length","anames"],["sQuote",["@","fun","generic"]]],{"domain":"NA"}]]],["{",["<-","sigList","signature"],["for","i",["seq_along","sigList"],["<-",["[[","sigList","i"],["c",["[[","sigClasses","i"],["[[","pkgs","i"]]]],["<-","fcall",["do.call","\"call\"",["c","\"fun\"","sigList"]]],["if",["identical","anames",["formalArgs","fun"]],["<-","smatch",["match.call","fun","fcall"]],["{",["<-","fmatch","fun"],["<-","ff",["as.list","anames"]],["<-",["names","ff"],"anames"],["<-",["formals","fmatch",{"envir":["environment","fun"]}],"ff"],["<-","smatch",["match.call","fmatch","fcall"]]]],["<-","snames",["[",["names","smatch"],["-","1L"]]],["<-","which",["match","snames","anames"]],["if",["anyNA","which"],["stop",["sprintf",["ngettext",["sum",["is.na","which"]],"\"in the method signature for function %s invalid argument name in the signature: %s\"","\"in the method signature for function %s invalid argument names in the signature: %s\""],["sQuote",["@","fun","generic"]],["paste",["[","snames",["is.na","which"]],{"collapse":"\", \""}]],{"domain":"NA"}]],["<-","smatch",["[","smatch",["-","1"]]],["for","i",["seq_along","smatch"],["{",["<-","eli",["[[","smatch","i"]],["<-",["[[","sigClasses","i"],["[[","eli","1"]],["<-",["[[","pkgs","i"],["[[","eli","2"]]]]]],["<-","n",["length","anames"]],["<-","value",["rep","\"ANY\"","n"]],["<-","valueP",["rep","\"methods\"","n"]],["<-",["names","value"],"anames"],["<-",["[","value","which"],"sigClasses"],["<-",["[","valueP","which"],"pkgs"],["<-","unspec",["==","value","\"ANY\""]],["while",["&&",[">","n","1"],["[[","unspec","n"]],["<-","n",["-","n","1"]]],["<-",["length","value"],["<-",["length","valueP"],"n"]],["<-",["attr","value","\"package\""],"valueP"],"value"]]],["<-","showMlist",["function",[{"mlist":"","includeDefs":"TRUE","inherited":"TRUE","classes":"NULL","useArgNames":"TRUE","printTo":["stdout",{}]}],["{",[".MlistDeprecated","\"showMlist()\""],["if",["isFALSE","printTo"],["{",["<-","tmp",["tempfile",{}]],["<-","con",["file","tmp","\"w\""]]],["<-","con","printTo"]],["<-","object",["linearizeMlist","mlist","inherited"]],["<-","methods",["@","object","methods"]],["<-","signatures",["@","object","classes"]],["<-","args",["@","object","arguments"]],["if",["&&",["!",["is.null","classes"]],[">",["length","signatures"],"0"]],["{",["<-","keep",["!",["vapply","signatures",["function",[{"x":"","y":""}],["all",["is.na",["match","x","y"]]]],"NA","classes"]]],["<-","methods",["[","methods","keep"]],["<-","signatures",["[","signatures","keep"]],["<-","args",["[","args","keep"]]]],["if",["==",["length","methods"],"0"],["cat",{"file":"con"},"\"<Empty Methods List>\\n\""],["{",["<-","n",["length","methods"]],["<-","labels",["character","n"]],["if","useArgNames",["{",["for","i",[":","1L","n"],["{",["<-","sigi",["[[","signatures","i"]],["<-",["[[","labels","i"],["paste0",["[[","args","i"],"\" = \\\"\"","sigi","\"\\\"\"",{"collapse":"\", \""}]]]]],["{",["for","i",[":","1L","n"],["<-",["[[","labels","i"],["paste",["[[","signatures","i"],{"collapse":"\", \""}]]]]],["for","i",["seq_along","methods"],["{",["cat",{"file":"con"},["(",["if","includeDefs","\"## Signature:\"","\"\""]],["[[","labels","i"]],["<-","method",["[[","methods","i"]],["if","includeDefs",["{",["cat",{"file":"con"},"\":\\n\""],["if",["is","method","\"MethodDefinition\""],["cat",{"file":"con"},["deparse",["@","method",".Data"]],{"sep":"\"\\n\""}],["cat",{"file":"con"},["deparse","method"],{"sep":"\"\\n\""}]]]],["if",["&&",["is","method","\"MethodDefinition\""],["!",["identical",["@","method","target"],["@","method","defined"]]]],["{",["<-","defFrom",["@","method","defined"]],["cat",{"file":"con"},["if","includeDefs","\"##:\"","\"\\n\""],"\"    (inherited from \"",["paste0",["names","defFrom"],"\" = \\\"\"",["as.character","defFrom"],"\"\\\"\"",{"collapse":"\", \""}],"\")\"",["if","includeDefs","\"\\n\""],{"sep":"\"\""}]]],["cat",{"file":"con"},"\"\\n\""]]]]],["if",["isFALSE","printTo"],["{",["close","con"],["<-","value",["readLines","tmp"]],["unlink","tmp"],"value"]]]]],["<-","promptMethods",["function",[{"f":"","filename":"NULL","methods":""}],["{",["<-","escape",["function",[{"txt":""}],["gsub","\"%\"","\"\\\\\\\\%\"","txt"]]],["<-","packageString","\"\""],["<-","fdef",["getGeneric","f"]],["if",["!",["isGeneric","f",{"fdef":"fdef"}]],["stop",["gettextf","\"no generic function found corresponding to %s\"",["sQuote","f"]],{"domain":"NA"}]],["if",["missing","methods"],["{",["<-","methods",["findMethods","fdef"]],["<-","where",[".genEnv","fdef",["topenv",["parent.frame",{}]]]],["if",["!",["identical","where",".GlobalEnv"]],["<-","packageString",["sprintf","\"in Package \\\\pkg{%s}\"",["getPackageName","where"]]]]]],["<-","fullName",[[":::","utils","topicName"],"\"methods\"","f"]],["<-","n",["length","methods"]],["<-","labels",["character","n"]],["<-","aliases",["character","n"]],["<-","signatures",["findMethodSignatures",{"methods":"methods"},{"target":"TRUE"}]],["<-","args",["colnames","signatures"]],["for","i",["seq_len","n"],["{",["<-","sigi",["[","signatures","i",{}]],["<-",["[[","labels","i"],["sprintf","\"\\\\code{signature(%s)}\"",["paste",["sprintf","\"%s = \\\"%s\\\"\"","args",["escape","sigi"]],{"collapse":"\", \""}]]],["<-",["[[","aliases","i"],["paste0","\"\\\\alias{\"",[[":::","utils","topicName"],"\"method\"",["c","f",["[","signatures","i",{}]]],"\"}\""]]]],["<-","text",["paste0","\"\\n\\\\item{\"","labels","\"}{\\n%%  ~~describe this method here~~\\n}\""]],["<-","text",["c","\"\\\\section{Methods}{\\n\\\\describe{\"","text","\"}}\""]],["<-","aliasText",["c",["paste0","\"\\\\alias{\"",["escape","fullName"],"\"}\""],["escape","aliases"]]],["if",["isFALSE","filename"],["return",["c","aliasText","text"]]],["if",["||",["is.null","filename"],["isTRUE","filename"]],["<-","filename",["paste0","fullName","\".Rd\""]]],["<-","Rdtxt",["list",{"name":["paste0","\"\\\\name{\"","fullName","\"}\""]},{"type":"\"\\\\docType{methods}\""},{"aliases":"aliasText"},{"title":["sprintf","\"\\\\title{ ~~ Methods for Function \\\\code{%s} %s ~~}\"","f","packageString"]},{"description":["paste0","\"\\\\description{\\n ~~ Methods for function\"","\" \\\\code{\"","f","\"} \"",["sub","\"^in Package\"","\"in package\"","packageString"],"\" ~~\\n}\""]},{"\"section{Methods}\"":"text"},{"keywords":["c","\"\\\\keyword{methods}\"","\"\\\\keyword{ ~~ other possible keyword(s) ~~ }\""]}]],["if",["is.na","filename"],["return","Rdtxt"]],["cat",["unlist","Rdtxt"],{"file":"filename"},{"sep":"\"\\n\""}],[".message","\"A shell of methods documentation has been written\"",[".fileDesc","filename"],"\".\\n\""],["invisible","filename"]]]],["<-","linearizeMlist",["function",[{"mlist":"","inherited":"TRUE"}],["{",["<-","methods",["@","mlist","methods"]],["<-","allMethods",["@","mlist","allMethods"]],["if",["&&","inherited",[">=",["length","allMethods"],["length","methods"]]],["{",["<-","methods","allMethods"]]],["<-","preC",["function",[{"y":"","x":""}],["c","x","y"]]],["<-","cnames",["names","methods"]],["<-","value",["list",{}]],["<-","classes",["list",{}]],["<-","arguments",["list",{}]],["<-","argname",["as.character",["@","mlist","argument"]]],["for","i",["seq_along","cnames"],["{",["<-","mi",["[[","methods","i"]],["if",["is.function","mi"],["{",["<-","value",["c","value",["list","mi"]]],["<-","classes",["c","classes",["list",["[[","cnames","i"]]]],["<-","arguments",["c","arguments",["list","argname"]]]],["if",["is","mi","\"MethodsList\""],["{",[".MlistDeprecated",{}],["<-","mi",["Recall","mi","inherited"]],["<-","value",["c","value",["@","mi","methods"]]],["<-","classes",["c","classes",["lapply",["@","mi","classes"],"preC",["[[","cnames","i"]]]],["<-","arguments",["c","arguments",["lapply",["@","mi","arguments"],"preC","argname"]]]],["warning",["gettextf","\"skipping methods list element %s of unexpected class %s\\n\\n\"",["paste",["[","cnames","i"],{"collapse":"\", \""}],["dQuote",[".class1","mi"]]],{"domain":"NA"}]]]]],["new","\"LinearMethodsList\"",{"methods":"value"},{"classes":"classes"},{"arguments":"arguments"}]]]],["<-","print.MethodsList",["function",[{"x":"","...":""}],["showMlist","x"]]],["<-","listFromMlist",["function",[{"mlist":"","prefix":["list",{}],"sigs.":"TRUE","methods.":"TRUE"}],["{",["<-","methodSlot",["slot","mlist","\"methods\""]],["<-","mnames",["names","methodSlot"]],["<-","argName",["as.character",["slot","mlist","\"argument\""]]],["<-","sigs",["list",{}]],["<-","methods",["list",{}]],["for","i",["seq_along","methodSlot"],["{",["<-","thisMethod",["[","methodSlot","i"]],["<-","thisClass",["[[","mnames","i"]],["<-",["[[","prefix","argName"],"thisClass"],["if",["is.function","thisMethod"],["{",["if","sigs.",["<-","sigs",["c","sigs",["list","prefix"]]]],["if","methods.",["<-","methods",["c","methods",["list","thisMethod"]]]]],["{",["<-","more",["Recall","thisMethod","prefix"]],["if","sigs.",["<-","sigs",["c","sigs",["[[","more","1"]]]],["if","methods.",["<-","methods",["c","methods",["[[","more","2"]]]]]]]],["list","sigs","methods"]]]],["<-",".insertCachedMethods",["function",[{"mlist":"","argName":"","Class":"","fromClass":"","def":""}],["{",["if",["is","def","\"MethodsList\""],["{",[".MlistDeprecated",{}],["<-","newArg",["c","argName",["as.character",["@","def","argument"]]]],["<-","newDefs",["@","def","allMethods"]],["<-","newSigs",["as.list",["names","newDefs"]]],["for","j",["seq_along","newDefs"],["<-","mlist",["Recall","mlist","newArg",["c","Class",["[[","newSigs","j"]],"fromClass",["[[","newDefs","j"]]]]],["{",["<-","def",[".addMethodFrom","def",["[","argName","1L"],["[","Class","1L"],"fromClass"]],["<-","mlist",["insertMethod","mlist","Class","argName","def","TRUE"]]]],"mlist"]]],["<-",".addMethodFrom",["function",[{"def":"","arg":"","Class":"","fromClass":""}],["{",["if",["is","def","\"MethodDefinition\""],["{",["<-",["[[",["@","def","target"],"arg"],"Class"],["<-",["[[",["@","def","defined"],"arg"],"fromClass"]]],"def"]]],["<-","asMethodDefinition",["function",[{"def":"","signature":["list",".anyClassName"],"sealed":"FALSE","fdef":"def"}],["{",["if",["||",["is.primitive","def"],["is","def","\"MethodDefinition\""]],"def",["{",["=","value",["new","\"MethodDefinition\""]],["<-",["@","value",".Data"],"def"],["<-","classes",[".MakeSignature",["new","\"signature\""],"def","signature","fdef"]],["<-",["@","value","target"],"classes"],["<-",["@","value","defined"],"classes"],"value"]]]]],["<-",".trimMlist",["function",[{"mlist":"","fromClass":""}],["{",["<-",["@","mlist","methods"],["[",["@","mlist","methods"],"fromClass"]],["<-",["@","mlist","allMethods"],["[",["@","mlist","allMethods"],"fromClass"]],"mlist"]]],["<-",".noMlistsFlag","TRUE"],["<-",".noMlists",["function",[],["{",".noMlistsFlag"]]],["<-",".MlistDepTable",["new.env",{}]],["<-",".MlistDeprecated",["function",[{"this":"\"<default>\"","instead":""}],["{",["if",["is.character","this"],["{",["if",["exists","this",{"envir":".MlistDepTable"},{"inherits":"FALSE"}],["return",{}],["assign","this","TRUE",{"envir":".MlistDepTable"}]]]],[["::","base",".Deprecated"],{"msg":["paste0",["if",["missing","this"],"\"Use of the \\\"MethodsList\\\" meta data objects is deprecated.\"",["if",["is.character","this"],["gettextf","\"%s, along with other use of the \\\"MethodsList\\\" metadata objects, is deprecated.\"",["dQuote","this"]],["gettextf","\"In %s: use of \\\"MethodsList\\\" metadata objects is deprecated.\"",["deparse","this"]]]],"\"\\n \"",["if",["!",["missing","instead"]],["gettextf","\"Use %s instead. \"",["dQuote","instead"]]],"\"See ?MethodsList. (This warning is shown once per session.)\""]}]]]],["<-",".MlistDefunct",["function",[{"this":"\"<default>\"","instead":""}],["{",[["::","base",".Defunct"],{"msg":["paste0",["if",["missing","this"],"\"Use of the \\\"MethodsList\\\" meta data objects is defunct.\"",["if",["is.character","this"],["gettextf","\"%s, along with other use of the \\\"MethodsList\\\" metadata objects, is defunct.\"",["dQuote","this"]],["gettextf","\"In %s: use of \\\"MethodsList\\\" metadata objects is defunct.\"",["deparse","this"]]]],"\" \"",["if",["!",["missing","instead"]],["gettextf","\"Use %s instead. \"",["dQuote","instead"]]],"\"See ?MethodsList.\""]}]]]]]
