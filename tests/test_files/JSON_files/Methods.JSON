[[],["<-","setNames",["::","stats","setNames"]],["<-","setGeneric",["function",[{"name":"","def":"NULL","group":["list",{}],"valueClass":["character",{}],"where":["topenv",["parent.frame",{}]],"package":"NULL","signature":"NULL","useAsDefault":"NULL","genericFunction":"NULL","simpleInheritanceOnly":"NULL"}],["{",["if",["is.character",[".isSingleName","name"]],["stop",["gettextf","\"invalid argument 'name': %s\"",[".isSingleName","name"]],{"domain":"NA"}]],["if",["&&",["exists","name","\"package:base\""],["inBasicFuns","name"]],["{",["<-","name",["switch","name",{"\"as.double\"":"\"as.numeric\""},"name"]],["<-","fdef",["getGeneric","name"]],["<-","compatibleSignature",["&&",["&&",["==",["nargs",{}],"2L"],["!",["missing","signature"]]],["identical","signature",["@","fdef","signature"]]]],["if",["||",["<=",["nargs",{}],"1"],"compatibleSignature"],["{",[".cacheGeneric","name","fdef"],["return","name"]]],["if",["&&",["!",["is.function","useAsDefault"]],["!",["isFALSE","useAsDefault"]]],["{",["<-","msg",["gettextf","\"%s dispatches internally;  methods can be defined, but the generic function is implicit, and cannot be changed.\"",["sQuote","name"]]],["stop","msg",{"domain":"NA"}]]]]],["<-","simpleCall",["{",["||",["<",["nargs",{}],"2"],["all",["missing","def"],["missing","group"],["missing","valueClass"],["missing","package"],["missing","signature"],["missing","useAsDefault"],["missing","genericFunction"],["missing","simpleInheritanceOnly"]]]]],["<-","stdGenericBody",["substitute",["standardGeneric","NAME"],["list",{"NAME":"name"}]]],["<-","fdef",["if",["is.null","package"],["getFunction","name",{"mustFind":"FALSE"},{"where":"where"}],["{",["<-","ev",[".NamespaceOrPackage","package"]],["if","simpleCall",["implicitGeneric","name","ev"],["getFunction","name",{"mustFind":"FALSE"},{"where":"ev"}]]]]],["if","simpleCall",["{",["if",["is","fdef","\"genericFunction\""],["return",[".GenericAssign","name","fdef","where"]]]]],["if",["is.null","fdef"],["{",["if",["isNamespace","where"],["<-","fdef",[".getFromStandardPackages","name"]],["<-","fdef",["getFunction","name",{"mustFind":"FALSE"}]]]]],["if",["&&",["is.null","fdef"],["is.function","useAsDefault"]],["<-","fdef","useAsDefault"]],["<-","doUncache","FALSE"],["if",["&&",["is.object","fdef"],["is","fdef","\"genericFunction\""]],["{",["<-","doUncache","TRUE"],["<-","oldDef","fdef"],["<-","prevDefault",["finalDefaultMethod",["@","fdef","default"]]],["if",["is.null","package"],["<-","package",["@","fdef","package"]]]],["if",["is.function","fdef"],["{",["<-","prevDefault","fdef"],["if",["is.primitive","fdef"],["<-","package","\"base\""]],["if",["is.null","package"],["<-","package",["getPackageName",["environment","fdef"]]]]],["<-","prevDefault","NULL"]]],["if",["is.primitive","fdef"],["<-","fdef",["getGeneric","name",{"where":"where"}]],["if",["is.function","fdef"],["<-",["body","fdef",{"envir":["as.environment","where"]}],"stdGenericBody"]]],["if",["!",["is.null","def"]],["{",["if",["||",["is.primitive","def"],["!",["is.function","def"]]],["stop",["gettextf","\"if the 'def' argument is supplied, it must be a function that calls standardGeneric(\\\"%s\\\") or is the default\"","name"],{"domain":"NA"}]],["<-","nonstandardCase",[".NonstandardGenericTest",["body","def"],"name","stdGenericBody"]],["if",["is.na","nonstandardCase"],["{",["if",["is.null","useAsDefault"],["{",["<-","useAsDefault","def"]]],["<-",["body","def",{"envir":["as.environment","where"]}],"stdGenericBody"],["<-","nonstandardCase","FALSE"]]],["<-","fdef","def"],["if",["&&",["is.null","genericFunction"],"nonstandardCase"],["<-","genericFunction",["new","\"nonstandardGenericFunction\""]]]]],["<-","thisPackage",["getPackageName","where"]],["if",["||",["is.null","package"],["!",["nzchar","package"]]],["<-","package","thisPackage"]],["if",["is.null","fdef"],["stop",["gettextf","\"must supply a function skeleton for %s, explicitly or via an existing function\"",["sQuote","name"]],{"domain":"NA"}]],["<-","ensureGeneric.fdef",["function",[{"sig":"signature"}],["{",["if",["!",["(",["&&",["is.object","fdef"],["is","fdef","\"genericFunction\""]]]],["{",["<-","fdeflt",["if",["is.function","useAsDefault"],"useAsDefault",["if",["isFALSE","useAsDefault"],"NULL",["if",["&&",["&&",["is.function","prevDefault"],["!",["identical",["formalArgs","prevDefault"],["formalArgs","fdef"]]]],["!",["is.primitive","prevDefault"]]],"NULL","prevDefault"]]]],["if",["is.function","fdeflt"],["<-","fdeflt",[".derivedDefaultMethod","fdeflt"]]],["<<-","fdef",["makeGeneric","name","fdef","fdeflt",{"group":"group"},{"valueClass":"valueClass"},{"package":"package"},{"signature":"sig"},{"genericFunction":"genericFunction"},{"simpleInheritanceOnly":"simpleInheritanceOnly"}]]]]]]],["if",["identical","package","thisPackage"],["{",["ensureGeneric.fdef",{}]],["{",["<-","implicit",["implicitGeneric","name",[".NamespaceOrPackage","package"]]],["if",["is.null","implicit"],["{",["ensureGeneric.fdef",{}]],["{",["ensureGeneric.fdef",["if",["&&",["is.null","signature"],["is.null","def"]],["@","implicit","signature"],"signature"]],["<-","cmp",[".identicalGeneric","fdef","implicit",{"allow.extra.dots":["!",["nzchar",["Sys.getenv","\"R_SETGENERIC_PICKY_DOTS\""]]]}]],["if",["isTRUE","cmp"],["{",["<-","fdef","implicit"]],["if",["is.function","implicit"],["{",["<-","thisPName",["if",["identical","thisPackage","\".GlobalEnv\""],"\"the global environment\"",["paste","\"package\"",["sQuote","thisPackage"]]]],["if",["&&",["is.null","def"],["is.null","signature"]],["{",["message",["gettextf","\"Creating a generic function for %s from %s in %s\\n    (from the saved implicit definition)\"",["sQuote","name"],["sQuote","package"],"thisPName"],{"domain":"NA"}],["<-","fdef","implicit"]],["{",["message",["gettextf","\"Creating a new generic function for %s in %s\"",["sQuote","name"],"thisPName"],{"domain":"NA"}],["<-",["@","fdef","package"],["<-",["packageSlot",["@","fdef","generic"]],["<-",["packageSlot",["$",["environment","fdef"],".Generic"]],"thisPackage"]]]]]],["{",["warning",["gettextf","\"no generic version of %s on package %s is allowed;\\n   a new generic will be assigned for %s\"",["sQuote","name"],["sQuote","package"],"thisPName"],{"domain":"NA"}],["<-",["@","fdef","package"],["<-",["packageSlot",["@","fdef","generic"]],["<-",["packageSlot",["$",["environment","fdef"],".Generic"]],"thisPackage"]]]]]]]]]],["if",["identical",["@","fdef","signature"],"\"...\""],["<-","fdef",[".dotsGeneric","fdef"]]],["if","doUncache",[".uncacheGeneric","name","oldDef"]],["<-","groups",["@","fdef","group"]],["for","group","groups",["{",["<-","gdef",["getGeneric","group"]],["if",["&&",["is","gdef","\"groupGenericFunction\""],["is.na",["match",["@","fdef","generic"],["as.character",["@","gdef","groupMembers"]]]]],["{",["<-","gwhere",[".genEnv","group","where"]],["<-",["@","gdef","groupMembers"],["c",["@","gdef","groupMembers"],["list",["@","fdef","generic"]]]],["assign","group","gdef","gwhere"]]]]],[".GenericAssign","name","fdef","where"]]]],["<-",".GenericAssign",["function",[{"name":"","fdef":"","where":""}],["{",["assign","name","fdef","where"],[".cacheGeneric","name","fdef"],["<-","methods",["@","fdef","default"]],["assignMethodsMetaData","name","methods","fdef","where"],[".assignMethodsTableMetaData","name","fdef","where"],"name"]]],["<-",".standardPackageNamespaces",["new.env",{}]],["<-",".standardPackages",["c","\"stats\"","\"graphics\"","\"grDevices\"","\"utils\"","\"datasets\"","\"methods\""]],["<-",".getFromStandardPackages",["function",[{"name":""}],["{",["<-","namespaces",["as.list",".standardPackageNamespaces",{"all.names":"TRUE"}]],["if",["==",["length","namespaces"],"0L"],["{",["<-","namespaces",["lapply",".standardPackages",["function",[{"pkg":""}],["{",["tryCatch",["loadNamespace","pkg"],{"error":["function",[{"e":""}],["new.env",{}]]}]]]]],["<-",["names","namespaces"],".standardPackages"],["list2env","namespaces",".standardPackageNamespaces"]],["{",["for","ns","namespaces",["{",["<-","obj",["[[","ns","name"]],["if",["is.function","obj"],["return","obj"]]]]]],["return","NULL"]]]],["<-","isGeneric",["function",[{"f":"","where":["topenv",["parent.frame",{}]],"fdef":"NULL","getName":"FALSE"}],["{",["if",["&&",["is.null","fdef"],["missing","where"]],["{",["<-","fdef",[".getGenericFromCache","f","where"]],["if",["!",["is.null","fdef"]],["return",["if","getName",["@","fdef","generic"],"TRUE"]]]]],["if",["is.null","fdef"],["<-","fdef",["getFunction","f",{"where":"where"},{"mustFind":"FALSE"}]]],["if",["is.null","fdef"],["return","FALSE"]],["if",["isBaseFun","fdef"],["{",["if",["&&",["is.character","f"],["%in%","f","\"as.double\""]],["<-","f","\"as.numeric\""]],["<-","gen",["genericForBasic","f",{"mustFind":"FALSE"}]],["return",["&&",["is.function","gen"],[">",["length",["names",[".getMethodsTable","gen"]]],"1L"]]]]],["if",["!",["is","fdef","\"genericFunction\""]],["return","FALSE"]],["<-","gen",["@","fdef","generic"]],["if",["||",["missing","f"],[".identC","gen","f"]],["{",["if","getName","gen","TRUE"]],["{",["warning",["gettextf","\"function %s appears to be a generic function, but with generic name %s\"",["sQuote","f"],["sQuote","gen"]],{"domain":"NA"}],"FALSE"]]]]],["<-","removeGeneric",["function",[{"f":"","where":["topenv",["parent.frame",{}]]}],["{",["<-","fdef","NULL"],["<-","allEv",["findFunction","f",{"where":"where"}]],["for","maybeEv","allEv",["{",["<-","fdef",["get","f","maybeEv"]],["if",["is","fdef","\"genericFunction\""],["break"]]]],["<-","found",["is","fdef","\"genericFunction\""]],["if","found",["{",[".removeMethodsMetaTable","fdef","where"],["<-","oldMetaName",["methodsPackageMetaName","\"M\"",["@","fdef","generic"],["@","fdef","package"]]],["if",["exists","oldMetaName","where",{"inherits":"FALSE"}],["rm",{"list":"oldMetaName"},{"pos":"where"}]],[".uncacheGeneric","f","fdef"],["rm",{"list":["@","fdef","generic"]},{"pos":"where"}]],["{",["if",["!",["is.character","f"]],["<-","f",["deparse","f"]]],["warning",["gettextf","\"generic function %s not found for removal\"",["sQuote","f"]],{"domain":"NA"}]]],["return","found"]]]],["<-","getMethods",["function",[{"f":"","where":["topenv",["parent.frame",{}]],"table":"FALSE"}],["{",["if",["!","table"],[".MlistDefunct","\"getMethods\"","\"findMethods\""]],["<-","nowhere",["missing","where"]],["<-","fdef",["getGeneric","f",{"where":"where"}]],["<-","f",["@","fdef","generic"]],["if",["!",["is.null","fdef"]],["{",["if","table",["return",["getMethodsForDispatch","fdef","TRUE"]]]]]]]],["<-","getMethodsForDispatch",["function",[{"fdef":"","inherited":"FALSE"}],["{",[".getMethodsTable","fdef",["environment","fdef"],{"inherited":"inherited"}]]]],["<-",".setIfBase",["function",[{"f":"","fdef":"","mlist":""}],["{",["if",["is.null","f"],"FALSE",["{",["<-","found",[["::","base","exists"],"f","\"package:base\""]],["if","found",["{",[["::","base","assign"],"\".Methods\"",{"envir":[["::","base","environment"],"fdef"]},[["::","base","get"],"f","\"package:base\""]]]],"found"]]]]],["<-",".getMethodsForDispatch",["function",[{"fdef":""}],["{",["<-","ev",[["::","base","environment"],"fdef"]],["if",[["::","base","exists"],"\".Methods\"",{"envir":"ev"}],[["::","base","get"],"\".Methods\"",{"envir":"ev"}]]]]],["<-",".setMethodsForDispatch",["function",[{"f":"","fdef":"","mlist":""}],["{",["<-","ev",["environment","fdef"]],["if",["||",["!",["is","fdef","\"genericFunction\""]],["!",["exists","\".Methods\"",{"envir":"ev"},{"inherits":"FALSE"}]]],["stop",["sprintf","\"internal error: did not get a valid generic function object for function %s\"",["sQuote","f"]],{"domain":"NA"}]],["assign","\".Methods\"",{"envir":"ev"},"mlist"]]]],["<-","cacheMethod",["function",[{"f":"","sig":"","def":"","args":["names","sig"],"fdef":"","inherited":"FALSE"}],["{",["<-","ev",["environment","fdef"]],[".cacheMethodInTable","fdef","sig","def",[".getMethodsTable","fdef","ev",{"inherited":"inherited"}]],["if",["!","inherited"],[".cacheMethodInTable","fdef","sig","def",[".getMethodsTable","fdef","ev",{"inherited":"TRUE"}]]]]]],["<-",".removeCachedMethod",["function",[{"f":"","sig":"","fdef":["getGeneric","f"]}],["cacheMethod","f","sig","NULL",["names","sig"],"fdef"]]],["<-","setMethod",["function",[{"f":"","signature":["character",{}],"definition":"","where":["topenv",["parent.frame",{}]],"valueClass":"NULL","sealed":"FALSE"}],["{",["if",["&&",["is.function","f"],["is","f","\"genericFunction\""]],["{",["<-","fdef","f"],["<-","f",["@","fdef","generic"]],["<-","gwhere",[".genEnv","f"]]],["if",["is.function","f"],["{",["if",["is.primitive","f"],["{",["<-","f",[".primname","f"]],["<-","fdef",["genericForBasic","f"]],["<-","gwhere",[".genEnv","f"]]],["stop","\"a function for argument 'f' must be a generic function\""]]],["{",["<-","where",["as.environment","where"]],["<-","gwhere",[".genEnv","f","where"]],["<-","f",["switch","f",{"\"as.double\"":"\"as.numeric\""},"f"]],["<-","fdef",["getGeneric","f",{"where":["if",["identical","gwhere",["baseenv",{}]],"where","gwhere"]}]]]]],["if",[".lockedForMethods","fdef","where"],["stop",["gettextf","\"the environment %s is locked; cannot assign methods for function %s\"",["sQuote",["getPackageName","where"]],["sQuote","f"]],{"domain":"NA"}]],["<-","hasMethods",["!",["is.null","fdef"]]],["<-","deflt",["getFunction","f",{"generic":"FALSE"},{"mustFind":"FALSE"},{"where":"where"}]],["if",["identical","gwhere",["baseenv",{}]],["{",["<-","allWhere",["findFunction","f",{"where":"where"}]],["<-","generics",["logical",["length","allWhere"]]],["if",["length","allWhere"],["{",["for","i",["seq_along","allWhere"],["{",["<-","fi",["get","f",["[[","allWhere","i"]]],["<-","geni",["is","fi","\"genericFunction\""]],["<-",["[[","generics","i"],"geni"],["if",["&&",["!","geni"],["is.null","deflt"]],["<-","deflt","fi"]]]]]],["if",["any","generics"],["{",["<-","gwhere",["as.environment",["[[",["[","allWhere","generics"],"1L"]]],["if",[".lockedForMethods","fdef","gwhere"],["{",["if",["identical",["as.environment","where"],"gwhere"],["stop",["gettextf","\"the 'where' environment (%s) is a locked namespace; cannot assign methods there\"",["getPackageName","where"]],{"domain":"NA"}]],["<-","msg",["gettextf","\"Copying the generic function %s to environment %s, because the previous version was in a sealed namespace (%s)\"",["sQuote","f"],["sQuote",["getPackageName","where"]],["sQuote",["getPackageName","gwhere"]]]],["message",["strwrap","msg"],{"domain":"NA"}],["assign","f","fdef","where"],["<-","gwhere","where"]]]]]]],["if",["!","hasMethods"],["<-","fdef","deflt"]],["if",["is.null","fdef"],["stop",["gettextf","\"no existing definition for function %s\"",["sQuote","f"]],{"domain":"NA"}]],["if",["!","hasMethods"],["{",["setGeneric","f",{"where":"where"}],["<-","doMessage",["!",["isS3Generic","fdef"]]],["<-","fdef",["getGeneric","f",{"where":"where"}]],["if","doMessage",["{",["<-","thisPackage",["getPackageName","where"]],["<-","thisPName",["if",["identical","thisPackage","\".GlobalEnv\""],"\"the global environment\"",["paste","\"package\"",["sQuote","thisPackage"]]]],["if",["identical",["as.character",["@","fdef","package"]],"thisPackage"],["message",["gettextf","\"Creating a generic function from function %s in %s\"",["sQuote","f"],"thisPName"],{"domain":"NA"}],["message",["gettextf","\"Creating a generic function for %s from package %s in %s\"",["sQuote","f"],["sQuote",["@","fdef","package"]],"thisPName"],{"domain":"NA"}]]]]],["if",["identical","gwhere","NA"],["{",["if",["is.null",["[[",".BasicFunsList","f"]],["stop",["sprintf","\"apparent internal error: a generic function was found for \\\"%s\\\", but no corresponding object was found searching from \\\"%s\\\"\"","f",["getPackageName","where"]],{"domain":"NA"}]],["if",["!",["isGeneric","f"]],["setGeneric","f"]]]]],["if",["isSealedMethod","f","signature","fdef",{"where":"where"}],["stop",["gettextf","\"the method for function %s and signature %s is sealed and cannot be re-defined\"",["sQuote","f"],[".signatureString","fdef","signature"]],{"domain":"NA"}]],["<-","signature",["matchSignature","signature","fdef","where"]],["<-","createMethod","FALSE"],["switch",["typeof","definition"],{"\"closure\"":["{",["<-","fnames",["formalArgs","fdef"]],["<-","mnames",["formalArgs","definition"]],["if",["!",["identical","mnames","fnames"]],["{",["if",["&&",["==",["length","fnames"],["length","mnames"]],["==",["length","mnames"],"1L"]],["{",["warning",["gettextf","\"For function %s, signature %s: argument in method definition changed from (%s) to (%s)\"",["sQuote","f"],["sQuote","signature"],"mnames","fnames"],{"domain":"NA"},{"call.":"FALSE"}],["<-",["formals","definition"],["formals","fdef"]],["<-","ll",["list",["as.name",["formalArgs","fdef"]]]],["<-",["names","ll"],"mnames"],["<-",["body","definition"],["substituteDirect",["body","definition"],"ll"]],["<-","mnames","fnames"]],["{",["<-","fullSig",["conformMethod","signature","mnames","fnames","f","fdef","definition"]],["if",["!",["identical","fullSig","signature"]],["{",["<-",["formals","definition",{"envir":["environment","definition"]}],["formals","fdef"]],["<-","signature","fullSig"]]],["<-","definition",["rematchDefinition","definition","fdef","mnames","fnames","signature"]]]]]],["<-","definition",["matchDefaults","definition","fdef"]],["<-","createMethod","TRUE"]]},{"\"builtin\"":""},{"\"special\"":["{",["if",["!",["identical","definition","deflt"]],["stop","\"primitive functions cannot be methods; they must be enclosed in a regular function\""]]]},{"\"NULL\"":["{"]},["stop",["gettextf","\"invalid method definition: expected a function, got an object of class %s\"",["dQuote",["class","definition"]]],{"domain":"NA"}]],["<-","fenv",["environment","fdef"]],["<-","nSig",[".getGenericSigLength","fdef","fenv","TRUE"]],["<-","signature",[".matchSigLength","signature","fdef","fenv","TRUE"]],["<-","margs",["[",["(",["@","fdef","signature"]],["seq_along","signature"]]],["if","createMethod",["{",["<-","definition",["asMethodDefinition","definition","signature","sealed","fdef"]],["<-",["@","definition","generic"],["@","fdef","generic"]]]],["<-","is.not.base",["!",["identical","where",["baseenv",{}]]]],["<-","whereMethods",["if",["&&","is.not.base",["!",[".noMlists",{}]]],["insertMethod",["getMethodsMetaData","f","where"],"signature","margs","definition"]]],["<-","mtable",["getMethodsForDispatch","fdef"]],["if",["cacheOnAssign","where"],["{",[".cacheMethodInTable","fdef","signature","definition","mtable"],[".cacheMethodInTable","fdef","signature","definition"],["if","is.not.base",[".addToMetaTable","fdef","signature","definition","where","nSig"]],["resetGeneric","f","fdef","mtable","gwhere","deflt"]]],["assignMethodsMetaData","f","whereMethods","fdef","where"],["invisible","f"]]]],["<-","removeMethod",["function",[{"f":"","signature":["character",{}],"where":["topenv",["parent.frame",{}]]}],["{",["if",["is.function","f"],["{",["if",["is","f","\"genericFunction\""],["{",["<-","fdef","f"],["<-","f",["@","f","generic"]]],["if",["is.primitive","f"],["{",["<-","f",[".primname","f"]],["<-","fdef",["genericForBasic","f",{"mustFind":"FALSE"}]]],["stop","\"function supplied as argument 'f' must be a generic\""]]]],["<-","fdef",["getGeneric","f",{"where":"where"}]]],["if",["is.null","fdef"],["{",["warning",["gettextf","\"no generic function %s found\"",["sQuote","f"]],{"domain":"NA"}],["return","FALSE"]]],["if",["is.null",["getMethod","fdef","signature",{"optional":"TRUE"}]],["{",["warning",["gettextf","\"no method found for function %s and signature %s\"",["sQuote",["@","fdef","generic"]],["paste",[".dQ","signature"],{"collapse":"\", \""}]],{"domain":"NA"}],["return","FALSE"]]],["setMethod","f","signature","NULL",{"where":"where"}],"TRUE"]]],["<-",".undefineMethod",["function",[{"f":"","signature":["character",{}],"where":["topenv",["parent.frame",{}]]}],["{",["<-","fdef",["getGeneric","f",{"where":"where"}]],["if",["is.null","fdef"],["{",["warning",["gettextf","\"no generic function %s found\"",["sQuote","f"]],{"domain":"NA"}],["return","FALSE"]]],["if",["!",["is.null",["getMethod","fdef","signature",{"optional":"TRUE"}]]],["setMethod","f","signature","NULL",{"where":"where"}]]]]],["<-","findMethod",["function",[{"f":"","signature":"","where":["topenv",["parent.frame",{}]]}],["{",["if",["is","f","\"genericFunction\""],["{",["<-","fdef","f"],["<-","f",["@","fdef","generic"]]],["<-","fdef",["getGeneric","f",{"where":"where"}]]],["if",["is.null","fdef"],["{",["warning",["gettextf","\"no generic function %s found\"",["sQuote","f"]],{"domain":"NA"}],["return",["character",{}]]]],["<-","fM",[".TableMetaName",["@","fdef","generic"],["@","fdef","package"]]],["<-","where",[".findAll","fM","where"]],["<-","found",["logical",["length","where"]]],["for","i",["seq_along","where"],["{",["<-","wherei",["[[","where","i"]],["<-","table",["get","fM","wherei",{"inherits":"FALSE"}]],["<-","mi",[".findMethodForFdef","signature","table","fdef"]],["<-",["[","found","i"],["!",["is.null","mi"]]]]],["<-","value",["[","where","found"]],["<-","what",["vapply","value","class","\"\"",{"USE.NAMES":"FALSE"}]],["if",["||",["identical","what","\"numeric\""],["identical","what","\"character\""]],["unlist","value"],"value"]]]],["<-","getMethod",["function",[{"f":"","signature":["character",{}],"where":["topenv",["parent.frame",{}]],"optional":"FALSE","mlist":"","fdef":""}],["{",["if",["!",["missing","where"]],["{",["<-","env",[".NamespaceOrEnvironment","where"]],["if",["is.null","env"],["stop",["gettextf","\"no environment or package corresponding to argument where=%s\"",["deparse","where"]],{"domain":"NA"}]],["<-","where","env"]]],["if",["missing","fdef"],["{",["if",["missing","where"],["<-","fdef",["getGeneric","f","FALSE"]],["{",["<-","fdef",["getGeneric","f","FALSE",{"where":"where"}]],["if",["is.null","fdef"],["<-","fdef",["getGeneric","f","FALSE"]]]]]]],["if",["!",["is","fdef","\"genericFunction\""]],["{",["if","optional",["return","NULL"]],["if",["!",["is.character","f"]],["<-","f",["deparse",["substitute","f"]]]],["stop",["gettextf","\"no generic function found for '%s'\"","f"],{"domain":"NA"}]]],["if",["missing","mlist"],["<-","mlist",["if",["missing","where"],["getMethodsForDispatch","fdef"],[".getMethodsTableMetaData","fdef","where","optional"]]]],["if",["is.environment","mlist"],["{",["<-","signature",["matchSignature","signature","fdef"]],["<-","value",[".findMethodInTable","signature","mlist","fdef"]],["if",["&&",["is.null","value"],["!","optional"]],["{",["if",["!",["is.character","f"]],["<-","f",["deparse",["substitute","f"]]]],["stop",["gettextf","\"no method found for function '%s' and signature %s\"","f",["paste","signature",{"collapse":"\", \""}]]]]],["return","value"]],["if",["is.null","mlist"],["return","mlist"]]],["stop","\"defunct methods list search\"",{"domain":"NA"}]]]],["<-","dumpMethod",["function",[{"f":"","signature":["character",{}],"file":["defaultDumpName","f","signature"],"where":["topenv",["parent.frame",{}]],"def":["getMethod","f","signature",{"where":"where"},{"optional":"TRUE"}]}],["{",["if",["!",["is.function","def"]],["<-","def",["getMethod","f",["character",{}],{"where":"where"},{"optional":"TRUE"}]]],["<-","closeit","TRUE"],["<-","isSTDOUT","FALSE"],["if",["is.character","file"],["{",["if",["!",["(",["<-","isSTDOUT",["==","file","\"\""]]]],["<-","file",["file","file","\"w\""]]]],["if",["inherits","file","\"connection\""],["{",["if",["!",["isOpen","file"]],["open","file","\"w\""],["<-","closeit","FALSE"]]],["stop","\"'file' must be a character string or a connection\""]]],["if",["!","isSTDOUT"],["{",["sink","file"],["on.exit",["{",["sink",{}],["if","closeit",["close","file"]]]]]],["cat","\"setMethod(\\\"\"","f","\"\\\", \"",["deparse","signature"],"\",\\n\"",{"sep":"\"\""}],["dput",["@","def",".Data"]],["cat","\")\\n\"",{"sep":"\"\""}],["if",["!","isSTDOUT"],["{",["on.exit",{}],["sink",{}],["if","closeit",["close","file"]]]],["invisible","file"]]]],["<-","dumpMethods",["function",[{"f":"","file":"\"\"","signature":"NULL","methods":["findMethods","f",{"where":"where"}],"where":["topenv",["parent.frame",{}]]}],["{",["if",[">",["length","signature"],"0"],["warning","\"argument 'signature' is not meaningful with the current implementation and is ignored \\n(extract a subset of the methods list instead)\""]],["<-","closeit","TRUE"],["<-","isSTDOUT","FALSE"],["if",["is.character","file"],["{",["if",["!",["(",["<-","isSTDOUT",["==","file","\"\""]]]],["<-","file",["file","file","\"w\""]]]],["if",["inherits","file","\"connection\""],["{",["if",["!",["isOpen","file"]],["open","file","\"w\""],["<-","closeit","FALSE"]]],["stop","\"'file' must be a character string or a connection\""]]],["if",["!","isSTDOUT"],["{",["sink","file"],["on.exit",["{",["sink",{}],["if","closeit",["close","file"]]]]]],["<-","sigs",["@","methods","signatures"]],["for","i",["seq_along","methods"],["dumpMethod","f",["[[","sigs","i"],{"file":"\"\""},{"def":["[[","methods","i"]}]]]]],["<-","selectMethod",["function",[{"f":"","signature":"","optional":"FALSE","useInherited":"TRUE","mlist":["if",["!",["is.null","fdef"]],["getMethodsForDispatch","fdef"]],"fdef":["getGeneric","f",["!","optional"]],"verbose":"FALSE","doCache":"FALSE"}],["{",["if",["is.environment","mlist"],["{",["<-","fenv",["environment","fdef"]],["<-","nsig",[".getGenericSigLength","fdef","fenv","FALSE"]],["if","verbose",["cat","\"* mlist environment with\"",["length","mlist"],"\"potential methods\\n\""]],["if",["<",["length","signature"],"nsig"],["<-",["[","signature",[":",["(",["+",["length","signature"],"1"]],"nsig"]],"\"ANY\""]],["if",["identical",["@","fdef","signature"],"\"...\""],["{",["<-","method",[".selectDotsMethod","signature","mlist",["if","useInherited",["getMethodsForDispatch","fdef",{"inherited":"TRUE"}]]]],["if",["&&",["is.null","method"],["!","optional"]],["stop",["gettextf","\"no method for %s matches class %s\"",["sQuote","\"...\""],["dQuote","signature"]],{"domain":"NA"}]],["return","method"]]],["<-","method",[".findMethodInTable","signature","mlist","fdef"]],["if",["is.null","method"],["{",["if",["missing","useInherited"],["<-","useInherited",["(",["&",["is.na",["match","signature","\"ANY\""]],["if",["identical","fdef","coerce"],["c","TRUE","FALSE"],"TRUE"]]]]],["if","verbose",["cat","\"  no direct match found to signature (\"",["paste","signature",{"collapse":"\", \""}],"\")\\n\"",{"sep":"\"\""}]],["<-","methods",["if",["any","useInherited"],["{",["<-","allmethods",[".getMethodsTable","fdef","fenv",{"check":"FALSE"},{"inherited":"TRUE"}]],[".findInheritedMethods","signature","fdef",{"mtable":"allmethods"},{"table":"mlist"},{"useInherited":"useInherited"},{"verbose":"verbose"},{"doCache":"doCache"}]]]],["if",["length","methods"],["return",["[[","methods","1L"]],["if","optional",["return","NULL"],["stop",["gettextf","\"no method found for signature %s\"",["paste","signature",{"collapse":"\", \""}]]]]]],["return","method"]]],["if",["is.null","mlist"],["{",["if","optional",["return","mlist"],["stop",["gettextf","\"%s has no methods defined\"",["sQuote","f"]],{"domain":"NA"}]]],["stop","\"selectMethod(): mlist is not an environment or NULL :\\n\"","\"** should no longer happen!\"",{"domain":"NA"}]]]]]],["<-","hasMethod",["function",[{"f":"","signature":["character",{}],"where":[".genEnv","f",["topenv",["parent.frame",{}]]]}],["{",["<-","fdef",["getGeneric","f",{"where":"where"}]],["if",["is.null","fdef"],"FALSE",["!",["is.null",["selectMethod","f","signature",{"optional":"TRUE"},{"fdef":"fdef"}]]]]]]],["<-","existsMethod",["function",[{"f":"","signature":["character",{}],"where":["topenv",["parent.frame",{}]]}],["{",["if",["missing","where"],["<-","method",["getMethod","f","signature",{"optional":"TRUE"}]],["<-","method",["getMethod","f","signature",{"where":"where"},{"optional":"TRUE"}]]],["!",["is.null","method"]]]]],["<-","signature",["function",[{"...":""}],["{",["<-","value",["list","..."]],["<-","names",["names","value"]],["for","i",["seq_along","value"],["{",["<-","sigi",["[[","value","i"]],["if",["||",["!",["is.character","sigi"]],["!=",["length","sigi"],"1L"]],["stop",["gettextf","\"bad class specified for element %d (should be a single character string)\"","i"],{"domain":"NA"}]]]],["setNames",["as.character","value"],"names"]]]],["<-","showMethods",["function",[{"f":["character",{}],"where":["topenv",["parent.frame",{}]],"classes":"NULL","includeDefs":"FALSE","inherited":["!","includeDefs"],"showEmpty":"","printTo":["stdout",{}],"fdef":["getGeneric","f",{"where":"where"}]}],["{",["if",["missing","showEmpty"],["<-","showEmpty",["!",["missing","f"]]]],["if",["isFALSE","printTo"],["<-","con",["textConnection","NULL","\"w\""]],["<-","con","printTo"]],["if",["is.function","f"],["{",["<-","fdef","f"],["if",["missing","where"],["<-","where",["environment","f"]]],["<-","f",["deparse",["substitute","f"]]],["if",[">",["length","f"],"1L"],["<-","f",["paste","f",{"collapse":"\"; \""}]]]]],["if",["!",["is","f","\"character\""]],["stop",["gettextf","\"first argument should be the names of one of more generic functions (got object of class %s)\"",["dQuote",["class","f"]]],{"domain":"NA"}]],["if",["==",["length","f"],"0L"],["{",["<-","f",["if",["missing","where"],["getGenerics",{}],["getGenerics","where"]]]]],["if",["==",["length","f"],"0L"],["cat",{"file":"con"},"\"no applicable functions\\n\""],["if",[">",["length","f"],"1L"],["{",["for","ff","f",["{",["<-","ffdef",["getGeneric","ff",{"where":"where"}]],["if",["missing","where"],["{",["if",["isGeneric","ff"],["Recall","ff",{"classes":"classes"},{"includeDefs":"includeDefs"},{"inherited":"inherited"},{"showEmpty":"showEmpty"},{"printTo":"con"},{"fdef":"ffdef"}]]],["if",["isGeneric","ff","where"],["{",["Recall","ff",{"where":"where"},{"classes":"classes"},{"includeDefs":"includeDefs"},{"inherited":"inherited"},{"showEmpty":"showEmpty"},{"printTo":"con"},{"fdef":"ffdef"}]]]]]]],["{",["<-","out",["paste0","\"\\nFunction \\\"\"","f","\"\\\":\\n\""]],["if",["!",["is","fdef","\"genericFunction\""]],["cat",{"file":"con"},"out","\"<not an S4 generic function>\\n\""],[".showMethodsTable","fdef","includeDefs","inherited",{"classes":"classes"},{"showEmpty":"showEmpty"},{"printTo":"con"}]]]]],["if",["isFALSE","printTo"],["{",["<-","txtOut",["textConnectionValue","con"]],["close","con"],"txtOut"],["invisible","printTo"]]]]],["<-",".methods_info",["function",[{"generic":["character",{}],"signature":["character",{}],"visible":["rep","TRUE",["length","signature"]],"from":["character",{}]}],["{",["if",["length","signature"],["<-","signature",["paste0","generic","\",\"","signature","\"-method\""]]],["<-","keep",["!",["duplicated","signature"]]],["data.frame",{"visible":["[","visible","keep"]},{"from":["[","from","keep"]},{"generic":["[","generic","keep"]},{"isS4":["rep","TRUE",["sum","keep"]]},{"row.names":["[","signature","keep"]},{"stringsAsFactors":"FALSE"}]]]],["<-",".S4methodsForClass",["function",[{"generic.function":"","class":""}],["{",["<-","def",["tryCatch",["getClass","class"],{"error":["function",[{"...":""}],"NULL"]}]],["if",["is.null","def"],["return",[".methods_info",{}]]],["<-","classes",["c","class",["names",["@",["getClass","class"],"contains"]]]],["<-","generics",["as.vector",["getGenerics",{"where":["search",{}]}]]],["<-","nms",["setNames","generics","generics"]],["<-","packages",["lapply","nms",["function",[{"generic":""}],["{",["<-","table",["[[",["environment",["getGeneric","generic"]],"\".MTable\""]],["lapply","table",["function",[{"m":""}],["environmentName",["environment","m"]]]]]]]],["<-","methods",["lapply","nms",["function",[{"generic":""}],["{",["<-","table",["[[",["environment",["getGeneric","generic"]],"\".MTable\""]],["lapply","table",["function",[{"m":""}],["{",["if",["&&",["is","m","\"MethodDefinition\""],["any",["%in%",["@","m","defined"],"classes"]]],["setNames",["as.vector",["@","m","defined"]],["names",["@","m","defined"]]]]]]]]]]],["<-","geom",["lapply","methods",["function",[{"method":""}],["{",["!",["vapply","method","is.null",["logical","1"]]]]]]],["<-","filter",["function",[{"elt":"","geom":""}],["[","elt","geom"]]],["<-","packages",["Map","filter","packages","geom"]],["<-","methods",["Map","filter","methods","geom"]],["<-","non0",["!=",["lengths","methods"],"0L"]],["<-","packages",["[","packages","non0"]],["<-","methods",["[","methods","non0"]],["<-","geom",["lapply","methods",["function",[{"method":"","classes":""}],["{",["<-","sig",["simplify2array","method"]],["if",["!",["is.matrix","sig"]],["<-","sig",["matrix","sig",{"ncol":["length","method"]}]]],["<-","idx",["apply","sig","2","match","classes","0"]],["if",["!",["is.matrix","idx"]],["<-","idx",["matrix","idx",{"ncol":["ncol","sig"]}]]],["<-","keep",["!=",["colSums",["!=","idx","0"]],"0"]],["<-","sidx",["[","idx",{},"keep",{"drop":"FALSE"}]],["<-","shift",["c","0",["[",["cumprod",["pmax","1",["apply","sidx","1","max"]]],["-",["nrow","sidx"]]]]],["<-","score",["colSums",["+","sidx","shift"]]],["<-","sig0",["<-","sig",["[","sig",{},"keep",{"drop":"FALSE"}]]],["<-",["[","sig0",["!=","sidx","0"]],"\"*\""],["<-","sig0",["apply","sig0","2","paste",{"collapse":"\"#\""}]],["<-",["split","score","sig0"],["lapply",["split","score","sig0"],["function",[{"elt":""}],["==","elt",["min","elt"]]]]],["==","score","1"]]],"classes"]],["<-","packages",["Map","filter","packages","geom"]],["<-","methods",["Map","filter","methods","geom"]],["<-","generic",["rep",["names","methods"],["lengths","methods"]]],["<-","signature",["unlist",["lapply","methods",["function",[{"method":""}],["{",["vapply","method","paste0",["character","1L"],{"collapse":"\",\""}]]]],{"use.names":"FALSE"}]],["<-","package",["unlist","packages",{"use.names":"FALSE"}]],[".methods_info",{"generic":"generic"},{"signature":"signature"},{"from":"package"}]]]],["<-",".S4methodsForGeneric",["function",[{"generic.function":"","class":""}],["{",["if",["is.null",["getGeneric","generic.function"]],["return",[".methods_info",{}]]],["<-","mtable","\".MTable\""],["<-","generic","generic.function"],["<-","table",["get","mtable",["environment",["getGeneric","generic"]]]],["<-","packages",["sapply",["names","table"],["function",[{"nm":"","table":""}],["{",["environmentName",["environment",["[[","table","nm"]]]]],"table"]],["<-","methods",["names","table"]],["<-","signatures",["lapply","methods",["function",[{"method":"","classes":""}],["{",["<-","m",["[[","table","method"]],["if",["is","m","\"MethodDefinition\""],["setNames",["as.vector",["@","m","defined"]],["names",["@","m","defined"]]],"NULL"]]]]],["<-","geom",["vapply","signatures",["Negate","is.null"],["logical","1"]]],["<-","packages",["[","packages","geom"]],["<-","methods",["[","methods","geom"]],["<-","signatures",["sapply",["[","signatures","geom"],["function",[{"elt":""}],["{",["paste0",["as.vector","elt"],{"collapse":"\",\""}]]]]],[".methods_info",{"generic":["rep","generic.function",["length","packages"]]},{"from":"packages"},{"signature":"signatures"}]]]],["<-",".S4methods",["function",[{"generic.function":"","class":""}],["{",["<-","info",["if",["!",["missing","generic.function"]],[".S4methodsForGeneric","generic.function","class"],["if",["!",["missing","class"]],[".S4methodsForClass","generic.function","class"],["stop","\"must supply 'generic.function' or 'class'\""]]]],["structure",["rownames","info"],{"info":"info"},{"byclass":["missing","generic.function"]},{"class":"\"MethodsFunction\""}]]]],["<-","removeMethods",["function",[{"f":"","where":["topenv",["parent.frame",{}]],"all":["missing","where"]}],["{",["<-","fdef",["getGeneric","f",{"where":"where"}]],["if",["!",["is","fdef","\"genericFunction\""]],["{",["warning",["gettextf","\"%s is not an S4 generic function in %s; methods not removed\"",["sQuote","f"],["sQuote",["getPackageName","where"]]],{"domain":"NA"}],["return","FALSE"]]],["<-","methods",["getMethodsForDispatch","fdef"]],["<-","default",["getMethod","fdef","\"ANY\"",{"optional":"TRUE"}]],["<-","fMetaName",[".TableMetaName",["@","fdef","generic"],["@","fdef","package"]]],["<-","oldMetaName",["methodsPackageMetaName","\"M\"",["@","fdef","generic"],["@","fdef","package"]]],["<-","allWhere",[".findAll","fMetaName","where"]],["if",["!","all"],["<-","allWhere",["[","allWhere","1L"]]],["<-","value",["rep","TRUE",["length","allWhere"]]],["cacheGenericsMetaData","f","fdef","FALSE","where"],[".uncacheGeneric","f","fdef"],["<-","doGeneric","TRUE"],["for","i",["seq_along","allWhere"],["{",["<-","db",["as.environment",["[[","allWhere","i"]]],["if",["environmentIsLocked","db"],["{",["warning",["gettextf","\"cannot remove methods for %s in locked environment/package %s\"",["sQuote","f"],["sQuote",["getPackageName","db"]]],{"domain":"NA"}],["<-",["[[","value","i"],"FALSE"],["next"]]],["if",["exists","fMetaName","db",{"inherits":"FALSE"}],["{",["<-","theseMethods",["get","fMetaName","db"]],[".mergeMethodsTable","fdef","methods","theseMethods","FALSE"],["rm",{"list":"fMetaName"},{"pos":"db"}],["if",["exists","oldMetaName","db",{"inherits":"FALSE"}],["rm",{"list":"oldMetaName"},{"pos":"db"}]]]]]],["<-","all",["&&","all",[["::","base","all"],"value"]]],["for","i",["seq_along","allWhere"],["{",["<-","db",["as.environment",["[[","allWhere","i"]]],["if",["&&","doGeneric",["isGeneric","f","db"]],["{",["if",["&&","all",["is","default","\"derivedDefaultMethod\""]],["{",["<-","default",["as","default","\"function\""]],["rm",{"list":"f"},{"pos":"db"}],["if",["!",["existsFunction","f","FALSE","db"]],["{",["message",["gettextf","\"Restoring default function definition of %s\"",["sQuote","f"]],{"domain":"NA"}],["assign","f","default","db"]]]],["{",["resetGeneric","f","fdef",{"where":"db"},{"deflt":"default"}]]],["<-","doGeneric","FALSE"]]]]],["any","value"]]]],["<-","resetGeneric",["function",[{"f":"","fdef":["getGeneric","f",{"where":"where"}],"mlist":["getMethodsForDispatch","fdef"],"where":["topenv",["parent.frame",{}]],"deflt":["finalDefaultMethod","mlist"]}],["{",["if",["!",["is","fdef","\"genericFunction\""]],["{",["stop",["gettextf","\"error in updating S4 generic function %s; the function definition is not an S4 generic function (class %s)\"",["sQuote","f"],["dQuote",["class","fdef"]]],{"domain":"NA"}]]],[".updateMethodsInTable","fdef",{"attach":"\"reset\""}],"f"]]],["<-","setReplaceMethod",["function",[{"f":"","...":"","where":["topenv",["parent.frame",{}]]}],["setMethod",["paste0","f","\"<-\""],"...",{"where":"where"}]]],["<-","setGroupGeneric",["function",[{"name":"","def":"NULL","group":["list",{}],"valueClass":["character",{}],"knownMembers":["list",{}],"package":["getPackageName","where"],"where":["topenv",["parent.frame",{}]]}],["{",["if",["is.null","def"],["{",["<-","def",["getFunction","name",{"where":"where"}]],["if",["isGroup","name",{"fdef":"def"}],["{",["if",["==",["nargs",{}],"1"],["{",["message",["gettextf","\"Function %s is already a group generic; no change\"",["sQuote","name"]],{"domain":"NA"}],["return","name"]]]]]]],["<-",["body","def",{"envir":["environment","def"]}],["substitute",["stop","MSG",{"domain":"NA"}],["list",{"MSG":["gettextf","\"Function %s is a group generic; do not call it directly\"",["sQuote","name"]]}]]],["if",["is.character","knownMembers"],["<-","knownMembers",["as.list","knownMembers"]]],["setGeneric","name","def",{"group":"group"},{"valueClass":"valueClass"},{"package":"package"},{"useAsDefault":"FALSE"},{"genericFunction":["new","\"groupGenericFunction\"","def",{"groupMembers":"knownMembers"}]},{"where":"where"}],[".MakeImplicitGroupMembers","name","knownMembers","where"],"name"]]],["<-","isGroup",["function",[{"f":"","where":["topenv",["parent.frame",{}]],"fdef":["getGeneric","f",{"where":"where"}]}],["{",["is","fdef","\"groupGenericFunction\""]]]],["<-","getGenericFromCall",["function",[{"call":"","methodEnv":""}],["{",["<-","generic",["$","methodEnv",".Generic"]],["if",["is.null","generic"],["{",["<-","fdef",["if",["is.name",["[[","call","1L"]],["getGeneric",["as.character",["[[","call","1L"]],{"mustFind":"TRUE"},{"where":"methodEnv"}],["[[","call","1L"]]],["<-","generic",["$",["environment","fdef"],".Generic"]]]],"generic"]]],["<-","fromNextMethod",["function",[{"call":""}],["{",["identical",["[[","call","1L"],["quote",".nextMethod"]]]]],["<-","callGeneric",["function",[{"...":""}],["{",["<-","call",["sys.call",["sys.parent","1L"]]],["<-",".local",["identical",["[[","call","1L"],["quote",".local"]]],["<-","methodCtxInd",["+","1L",["if",".local","1L","0L"]]],["<-","callerCtxInd",["+","methodCtxInd","1L"]],["<-","methodCall",["sys.call",["sys.parent","methodCtxInd"]]],["if",["fromNextMethod","methodCall"],["{",["<-","methodCtxInd",["+","methodCtxInd","1L"]]]],["<-","methodFrame",["parent.frame","methodCtxInd"]],["<-","genericName",["getGenericFromCall","methodCall","methodFrame"]],["if",["is.null","genericName"],["{",["stop","\"callGeneric() must be called from within a method body\""]]],["if",["==",["nargs",{}],"0L"],["{",["<-","callerFrame",["sys.frame",["sys.parent","callerCtxInd"]]],["<-","methodDef",["sys.function",["sys.parent","1L"]]],["<-","call",["match.call","methodDef","methodCall",{"expand.dots":"FALSE"},{"envir":"callerFrame"}]],["<-",["[","call",["-","1L"]],["lapply",["names",["[","call",["-","1L"]]],"as.name"]]],["{",["<-","call",["sys.call",{}]]]],["<-",["[[","call","1L"],["as.name","genericName"]],["eval","call",["parent.frame",{}]]]]],["<-","initMethodDispatch",["function",[{"where":["topenv",["parent.frame",{}]]}],[".Call","C_R_initMethodDispatch",["as.environment","where"]]]],["<-","isSealedMethod",["function",[{"f":"","signature":"","fdef":["getGeneric","f","FALSE",{"where":"where"}],"where":["topenv",["parent.frame",{}]]}],"FALSE"]],["<-",".isSealedMethod",["function",[{"f":"","signature":"","fdef":["getGeneric","f","FALSE",{"where":"where"}],"where":["topenv",["parent.frame",{}]]}],["{",["<-","fGen",["getFunction","f","TRUE","FALSE",{"where":"where"}]],["if",["!",["is.primitive","fGen"]],["{",["<-","mdef",["getMethod","f","signature",{"optional":"TRUE"},{"where":"where"},{"fdef":"fGen"}]],["return",["is","mdef","\"SealedMethodDefinition\""]]]],["if",["is","fdef","\"genericFunction\""],["<-","signature",["matchSignature","signature","fdef"]]],["if",["==",["length","signature"],"0L"],"TRUE",["if",["%in%","f",".subsetFuns"],["!",["any",["is.na",["match","signature",".BasicClasses"]]]],["{",["<-","sealed",["!",["is.na",["match",["[[","signature","1L"],".BasicClasses"]]]],["if",["&&","sealed",["(",["||",["!",["is.na",["match","\"Ops\"",["c","f",["getGroup","f","TRUE"]]]]],["!",["is.na",["match","f",["c","\"%*%\"","\"crossprod\""]]]]]]],["<-","sealed",["&&",["&&","sealed",["(",[">",["length","signature"],"1L"]]],["!",["is.na",["match",["[[","signature","2L"],".BasicClasses"]]]]]],"sealed"]]]]]],["<-",".subsetFuns",["c","\"[\"","\"[[\"","\"[<-\"","\"[[<-\""]],["<-",".lockedForMethods",["function",[{"fdef":"","env":""}],["{",["if",["||",["is.null","env"],["!",["environmentIsLocked","env"]]],["return","FALSE"]],["if",["!",["is","fdef","\"genericFunction\""]],["return","TRUE"]],["<-","name",["@","fdef","generic"]],["<-","package",["@","fdef","package"]],["<-","objs",["c","name",[".TableMetaName","name","package"]]],["for","obj","objs",["{",["<-","hasIt",["exists","obj","env",{"inherits":"FALSE"}]],["if",["(",["||",["!","hasIt"],["bindingIsLocked","obj","env"]]],["return","TRUE"]]]],"FALSE"]]],["<-","implicitGeneric",["function",[{"...":""}],"NULL"]],["<-",".implicitGeneric",["function",[{"name":"","where":["topenv",["parent.frame",{}]],"generic":["getGeneric","name",{"where":"where"}]}],["{",["if",["!",["nzchar","name"]],["stop",["gettextf","'expected a non-empty character string for argument name'"],{"domain":"NA"}]],["if",["&&",["&&",["!",["missing","generic"]],["is","generic","\"genericFunction\""]],["!",[".identC","name",["@","generic","generic"]]]],["stop",["gettextf","'generic function supplied was not created for %s'",["sQuote","name"]],{"domain":"NA"}]],["<-","createGeneric",["&&",["(",["||",["missing","generic"],["!",["is","generic","\"genericFunction\""]]]],["!",["isGeneric","name","where"]]]],["if","createGeneric",["{",["<-","fdefault",["getFunction","name",{"where":"where"},{"mustFind":"FALSE"}]],["if",["is.null","fdefault"],["return","NULL"]],["<-","env",["environment","fdefault"]],["<-","fdefault",[".derivedDefaultMethod","fdefault"]],["if",["isBaseFun","fdefault"],["{",["<-","value",["genericForBasic","name"]],["if",["is.function","value"],["{",["if",["&&",["!",["missing","generic"]],["!",["identical","value","generic"]]],["stop",["gettextf","\"%s is a primitive function; its generic form cannot be redefined\"",["sQuote","name"]],{"domain":"NA"}]],["<-","generic","value"],["<-","fdefault",["@","generic","default"]]]],["<-","package","\"base\""]],["<-","package",["getPackageName","env"]]],["<-","group",[".getImplicitGroup","name",["if",["identical","package","\"base\""],".methodsNamespace",["environment","fdefault"]]]],["if",["missing","generic"],["{",["<-","generic",[".getImplicitGeneric","name","env","package"]],["if",["is.null","generic"],["{",["<-","generic",["makeGeneric","name",{"fdefault":"fdefault"},{"package":"package"},{"group":"group"}]],[".cacheImplicitGeneric","name","generic"]]]],["{",["<-","generic",["makeGeneric","name","generic","fdefault",{"package":"package"},{"group":"group"}]],[".cacheImplicitGeneric","name","generic"]]]]],"generic"]]],["<-","setGenericImplicit",["function",[{"name":"","where":["topenv",["parent.frame",{}]],"restore":"TRUE"}],["{",["if",["!",["isGeneric","name","where"]],["{",["warning",["gettextf","\"%s is not currently a generic:  define it first to create a non-default implicit form\"",["sQuote","name"]],{"domain":"NA"}],["return","FALSE"]]],["<-","generic",["getGeneric","name",{"where":"where"}]],["if","restore",["removeMethods","name","where","TRUE"],["removeGeneric","name","where"]],[".saveToImplicitGenerics","name","generic","where"]]]],["<-","prohibitGeneric",["function",[{"name":"","where":["topenv",["parent.frame",{}]]}],["{",[".saveToImplicitGenerics","name","FALSE","where"]]]],["<-","registerImplicitGenerics",["function",[{"what":[".ImplicitGenericsTable","where"],"where":["topenv",["parent.frame",{}]]}],["{",["if",["!",["is.environment","what"]],["stop",["gettextf","\"must provide an environment table; got class %s\"",["dQuote",["class","what"]]],{"domain":"NA"}]],["<-","objs",["as.list","what",{"all.names":"TRUE"}]],["mapply",".cacheImplicitGeneric",["names","objs"],"objs"],"NULL"]]],["<-",".ImplicitGenericsMetaName","\".__IG__table\""],["<-",".ImplicitGenericsTable",["function",[{"where":""}],["{",["if",["!",["exists",".ImplicitGenericsMetaName","where",{"inherits":"FALSE"}]],["assign",".ImplicitGenericsMetaName",["new.env","TRUE"],"where"]],["get",".ImplicitGenericsMetaName","where"]]]],["<-",".saveToImplicitGenerics",["function",[{"name":"","def":"","where":""}],[".cacheGenericTable","name","def",[".ImplicitGenericsTable","where"]]]],["<-",".getImplicitGeneric",["function",[{"name":"","where":"","pkg":"\"\""}],["{",["<-","value",[".getImplicitGenericFromCache","name","where","pkg"]],["if",["&&",["is.null","value"],["!",["is.null",["<-","tbl",["[[","where",".ImplicitGenericsMetaName"]]]]],[".getGenericFromCacheTable","name","where","pkg","tbl"],"value"]]]],["<-",".identicalGeneric",["function",[{"f1":"","f2":"","allow.extra.dots":"FALSE"}],["{",["<-","gpString",["function",[{"gp":""}],["{",["if",["length","gp"],["paste",["as.character","gp"],{"collapse":"\", \""}],"\"<none>\""]]]],["if",["isFALSE","f2"],["return",["gettext","\"original function is prohibited as a generic function\""]]],["if",["!",["(",["&&",["is.function","f2"],["is.function","f1"]]]],["return",["gettext","\"not both functions!\""]]],["if",["!",["identical",["class","f1"],["class","f2"]]],["return",["sprintf","\"classes: %s, %s\"",[".dQ",["class","f1"]],[".dQ",["class","f2"]]]]],["if",["!",["isS4","f1"]],["return",["gettextf","\"argument %s is not S4\"",["deparse",["substitute","f1"]]]]],["if",["!",["isS4","f2"]],["return",["gettextf","\"argument %s is not S4\"",["deparse",["substitute","f2"]]]]],["<-","f1d",["@","f1",".Data"]],["<-","f2d",["@","f2",".Data"]],["if",["!",["identical",["formals","f1d"],["formals","f2d"]]],["{",["<-","a1",["names",["formals","f1d"]]],["<-","a2",["names",["formals","f2d"]]],["if",["identical","a1","a2"],["return",["gettext","\"formal arguments differ (in default values?)\""]],["if",["&&",["identical",["c","a1","\"...\""],"a2"],"allow.extra.dots"],["{"],["return",["gettextf","\"formal arguments differ: (%s), (%s)\"",["paste","a1",{"collapse":"\", \""}],["paste","a2",{"collapse":"\", \""}]]]]]]],["if",["!",["identical",["@","f1","valueClass"],["@","f2","valueClass"]]],["return",["gettextf","\"value classes differ: %s, %s\"",[".dQ",["gpString",["@","f1","valueClass"]]],[".dQ",["gpString",["@","f2","valueClass"]]]]]],["if",["!",["identical",["body",[["::","utils","removeSource"],"f1d"]],["body",[["::","utils","removeSource"],"f2d"]]]],["return","\"function body differs\""]],["if",["!",["identical",["@","f1","signature"],["@","f2","signature"]]],["return",["gettextf","\"signatures differ:  (%s), (%s)\"",["paste",["@","f1","signature"],{"collapse":"\", \""}],["paste",["@","f2","signature"],{"collapse":"\", \""}]]]],["if",["!",["identical",["@","f1","package"],["@","f2","package"]]],["return",["gettextf","\"package slots  differ: %s, %s\"",[".dQ",["gpString",["@","f1","package"]]],[".dQ",["gpString",["@","f2","package"]]]]]],["if",["!",["identical",["@","f1","group"],["@","f2","group"]]],["{",["return",["gettextf","\"groups differ: %s, %s\"",[".dQ",["gpString",["@","f1","group"]]],[".dQ",["gpString",["@","f2","group"]]]]]]],["if",["!",["identical",["as.character",["@","f1","generic"]],["as.character",["@","f2","generic"]]]],["return",["gettextf","\"generic names differ: %s, %s\"",[".dQ",["@","f1","generic"]],[".dQ",["@","f2","generic"]]]]],"TRUE"]]],["<-",".ImplicitGroupMetaName","\".__IGM__table\""],["<-",".MakeImplicitGroupMembers",["function",[{"group":"","members":"","where":""}],["{",["if",["!",["exists",".ImplicitGroupMetaName","where",{"inherits":"FALSE"}]],["assign",".ImplicitGroupMetaName",["new.env","TRUE"],"where"]],["<-","tbl",["get",".ImplicitGroupMetaName","where"]],["for","what","members",["assign","what",["as.list","group"],{"envir":"tbl"}]],"NULL"]]],["<-",".getImplicitGroup",["function",[{"name":"","where":""}],["{",["if",["!",["is.null",["<-","tbl",["[[","where",".ImplicitGroupMetaName"]]]],["{",["if",["!",["is.null",["<-","r",["[[","tbl","name"]]]],["return","r"]]]],["list",{}]]]],["<-","findMethods",["function",[{"f":"","where":"","classes":["character",{}],"inherited":"FALSE","package":"\"\""}],["{",["if",["is","f","\"genericFunction\""],["{",["<-","fdef","f"],["<-","f",["@","fdef","generic"]]],["if",[".isSingleString","f"],["{",["if",["missing","where"],["<-","fdef",["getGeneric","f",{"package":"package"}]],["{",["<-","fdef",["getGeneric","f",{"where":"where"},{"package":"package"}]],["if",["is.null","fdef"],["<-","fdef",["getGeneric","f",{"package":"package"}]]]]]],["if",["!",["is.function","f"]],["stop",["gettextf","\"argument %s must be a generic function or a single character string; got an object of class %s\"",["sQuote","\"f\""],["dQuote",["class","f"]]],{"domain":"NA"}],["{",["<-","fdef","f"],["<-","f",["deparse",["substitute","f"]]]]]]],["if",["!",["is","fdef","\"genericFunction\""]],["{",["warning",["gettextf","\"non-generic function '%s' given to findMethods()\"","f"],{"domain":"NA"}],["return",["list",{}]]]],["<-","object",["new","\"listOfMethods\"",{"arguments":["@","fdef","signature"]},{"generic":"fdef"}]],["if",["missing","where"],["<-","table",["get",["if","inherited","\".AllMTable\"","\".MTable\""],{"envir":["environment","fdef"]}]],["{",["if",["!",["isFALSE","inherited"]],["stop",["gettextf","\"only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)\"","inherited"],{"domain":"NA"}]],["<-","where",["as.environment","where"]],["<-","what",[".TableMetaName","f",["@","fdef","package"]]],["if",["is.null",["<-","table",["[[","where","what"]]],["return","object"]]]],["<-","objNames",["sort",["names","table"]]],["if",["length","classes"],["{",["<-","classesPattern",["paste0","\"#\"","classes","\"#\"",{"collapse":"\"|\""}]],["<-","which",["grep","classesPattern",["paste0","\"#\"","objNames","\"#\""]]],["<-","objNames",["[","objNames","which"]]]],["<-",["@","object",".Data"],["mget","objNames","table"]],["<-",["@","object","names"],"objNames"],["<-",["@","object","signatures"],["strsplit","objNames","\"#\"",{"fixed":"TRUE"}]],"object"]]],["<-","findMethodSignatures",["function",[{"...":"","target":"TRUE","methods":["findMethods","..."]}],["{",["<-","what",["@","methods","arguments"]],["if","target",["<-","sigs",["@","methods","signatures"]],["{",["<-","anySig",["rep","\"ANY\"",["length","what"]]],["for","m","methods",["if",["!",["is.primitive","m"]],["{",["<-",["length","anySig"],["length",["@","m","defined"]]],["break"]]]],["<-","sigs",["lapply","methods",["function",[{"x":""}],["if",["is.primitive","x"],"anySig",["as.character",["@","x","defined"]]]]]]]],["<-","lens",["unique",["vapply","sigs","length","1",{"USE.NAMES":"FALSE"}]]],["if",["==",["length","lens"],"0"],["return",["matrix",["character",{}],"0",["length",["@","methods","arguments"]]]]],["if",[">",["length","lens"],"1L"],["{",["<-","lens",["max","lens"]],["<-","anys",["rep","\"ANY\"","lens"]],["<-","sigs",["lapply","sigs",["function",[{"x":""}],["{",["if",["<",["length","x"],"lens"],["{",["<-",["[","anys",["seq_along","x"]],"x"],"anys"],"x"]]]]]]],["<-",["length","what"],"lens"],["t",["matrix",["unlist","sigs"],{"nrow":"lens"},{"dimnames":["list","what","NULL"]}]]]]],["<-","hasMethods",["function",[{"f":"","where":"","package":"\"\""}],["{",["<-","fdef","NULL"],["<-","nowhere",["missing","where"]],["if",["is","f","\"genericFunction\""],["{",["<-","fdef","f"],["<-","f",["@","fdef","generic"]],["if",["missing","package"],["<-","package",["@","fdef","package"]]]],["if",["!",[".isSingleString","f"]],["stop",["gettextf","\"argument 'f' must be a generic function or %s\"",[".notSingleString","f"]],{"domain":"NA"}],["if",["missing","package"],["{",["<-","package",["packageSlot","f"]],["if",["is.null","package"],["{",["if",["missing","where"],["<-","fdef",["getGeneric","f"]],["{",["<-","fdef",["getGeneric","f",{"where":"where"}]],["if",["is.null","fdef"],["<-","fdef",["getGeneric","f"]]]]],["if",["is","fdef","\"genericFunction\""],["<-","package",["@","fdef","package"]],["stop",["gettextf","\"'%s' is not a known generic function {and 'package' not specified}\"","f"],{"domain":"NA"}]]]]]]]],["<-","what",[".TableMetaName","f","package"]],["<-","testEv",["function",[{"ev":""}],["&&",["exists","what",{"envir":"ev"},{"inherits":"FALSE"}],[">",["length",["names",["get","what",{"envir":"ev"}]]],"0L"]]]],["if","nowhere",["{",["for","i",["seq_along",["search",{}]],["{",["if",["testEv",["as.environment","i"]],["return","TRUE"]]]],["return","FALSE"]],["testEv",["as.environment","where"]]]]]],["<-",".isSingleName",["function",[{"x":""}],["{",["if",["!",["is.character","x"]],["return",["paste0","'required to be a character vector, got an object of class \"'",["[[",["class","x"],"1L"],"'\"'"]]],["if",["!=",["length","x"],"1"],["return",["paste0","\"required to be a character vector of length 1, got length \"",["length","x"]]]],["if",["||",["is.na","x"],["!",["nzchar","x"]]],["return",["paste0","'required a non-empty string, got \"'","x","'\"'"]]],"TRUE"]]]]
